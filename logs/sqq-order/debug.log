2020-06-02 02:48:41,676 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@793be5ca: startup date [Tue Jun 02 02:48:41 CST 2020]; root of context hierarchy
2020-06-02 02:48:41,844 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 02:48:41,862 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$aa3e011e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 02:48:42,115 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 02:48:42,153 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-02 02:48:42,433 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-02 02:48:42,433 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-02 02:48:42,503 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-02 02:48:42,503 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-02 02:48:42,620 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 02:48:42,742 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-02 02:48:42,743 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-02 02:48:42,743 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-02 02:48:42,743 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-02 02:48:42,743 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-02 02:48:42,743 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-02 02:48:42,744 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-02 02:48:42,864 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-02 02:48:42,867 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1311 - Not registering with Eureka server per configuration
2020-06-02 02:48:42,870 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591037322869 with initial instances count: 2
2020-06-02 02:48:43,121 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:205 - Fetching config from server at : http://192.168.1.3:4001/
2020-06-02 02:48:43,334 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:149 - Located environment: name=sqq-order, profiles=[dev], label=null, version=null, state=null
2020-06-02 02:48:43,334 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:98 - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='classpath:/resposity/sqq-order-dev.yml'}]}
2020-06-02 02:48:43,337 [main] INFO  [com.sqq.order.SqqOrderApplication] SpringApplication.java:658 - The following profiles are active: dev
2020-06-02 02:48:43,348 [main] INFO  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ae372b9: startup date [Tue Jun 02 02:48:43 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@793be5ca
2020-06-02 02:48:43,707 [main] INFO  [o.s.b.factory.support.DefaultListableBeanFactory] DefaultListableBeanFactory.java:821 - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-06-02 02:48:43,774 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:294 - BeanFactory id=3436285d-9e18-3c68-8614-6923c8c94f70
2020-06-02 02:48:43,785 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 02:48:43,845 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8e23fe21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 02:48:43,865 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$aa3e011e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 02:48:44,116 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:91 - Tomcat initialized with port(s): 8085 (http)
2020-06-02 02:48:44,131 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Initializing ProtocolHandler ["http-nio-8085"]
2020-06-02 02:48:44,138 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:180 - Starting service [Tomcat]
2020-06-02 02:48:44,138 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:180 - Starting Servlet Engine: Apache Tomcat/8.5.34
2020-06-02 02:48:44,141 [localhost-startStop-1] INFO  [org.apache.catalina.core.AprLifecycleListener] DirectJDKLog.java:180 - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\IDM Computer Solutions\UltraEdit;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\WIN10\AppData\Local\Microsoft\WindowsApps;D:\Program Files (x86)\Microsoft VS Code Insiders\bin;D:\apache-maven-3.6.1\bin;C:\Users\WIN10\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;;.]
2020-06-02 02:48:44,273 [localhost-startStop-1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:180 - Initializing Spring embedded WebApplicationContext
2020-06-02 02:48:44,273 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 925 ms
2020-06-02 02:48:44,335 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.ServletRegistrationBean] ServletRegistrationBean.java:187 - Servlet dispatcherServlet mapped to [/]
2020-06-02 02:48:44,339 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-06-02 02:48:44,339 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-06-02 02:48:44,339 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-06-02 02:48:44,339 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'requestContextFilter' to: [/*]
2020-06-02 02:48:44,540 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing FeignContext-sqq-user: startup date [Tue Jun 02 02:48:44 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ae372b9
2020-06-02 02:48:44,552 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 02:48:44,670 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-02 02:48:44,670 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 02:48:44,673 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-02 02:48:44,673 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 02:48:44,738 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 02:48:44,843 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerAdapter] RequestMappingHandlerAdapter.java:588 - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ae372b9: startup date [Tue Jun 02 02:48:43 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@793be5ca
2020-06-02 02:48:44,880 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/newOrder],methods=[POST]}" onto public void com.sqq.order.controller.OrderController.newOrder(com.sqq.order.vo.NewOrder)
2020-06-02 02:48:44,881 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/getOrderById/{orderId}],methods=[GET]}" onto public void com.sqq.order.controller.OrderController.getOrderById(java.lang.Integer)
2020-06-02 02:48:44,882 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-06-02 02:48:44,883 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-02 02:48:44,901 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 02:48:44,901 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 02:48:45,559 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:888 - Shutting down DiscoveryClient ...
2020-06-02 02:48:45,564 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:911 - Completed shut down of DiscoveryClient
2020-06-02 02:48:45,581 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:433 - Registering beans for JMX exposure on startup
2020-06-02 02:48:45,582 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-06-02 02:48:45,588 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-06-02 02:48:45,589 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-06-02 02:48:45,590 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-06-02 02:48:45,592 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-06-02 02:48:45,601 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-06-02 02:48:45,608 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=ae372b9,type=ConfigurationPropertiesRebinder]
2020-06-02 02:48:45,612 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-06-02 02:48:45,622 [main] INFO  [o.s.context.support.DefaultLifecycleProcessor] DefaultLifecycleProcessor.java:356 - Starting beans in phase 0
2020-06-02 02:48:45,628 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 02:48:45,631 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-02 02:48:45,634 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-02 02:48:45,634 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-02 02:48:45,634 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-02 02:48:45,634 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-02 02:48:45,683 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 02:48:45,683 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-02 02:48:45,684 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-02 02:48:45,684 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-02 02:48:45,684 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-02 02:48:45,684 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-02 02:48:45,684 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-02 02:48:45,684 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-02 02:48:45,688 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-02 02:48:45,688 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1264 - Starting heartbeat executor: renew interval is: 5
2020-06-02 02:48:45,690 [main] INFO  [com.netflix.discovery.InstanceInfoReplicator] InstanceInfoReplicator.java:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-06-02 02:48:45,691 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591037325691 with initial instances count: 2
2020-06-02 02:48:45,694 [main] INFO  [o.s.c.n.e.serviceregistry.EurekaServiceRegistry] EurekaServiceRegistry.java:42 - Registering application SQQ-ORDER with eureka with status UP
2020-06-02 02:48:45,694 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1299 - Saw local status change event StatusChangeEvent [timestamp=1591037325694, current=UP, previous=STARTING]
2020-06-02 02:48:45,696 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:826 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085: registering service...
2020-06-02 02:48:45,703 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Starting ProtocolHandler ["http-nio-8085"]
2020-06-02 02:48:45,712 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] DirectJDKLog.java:180 - Using a shared selector for servlet write/read
2020-06-02 02:48:45,720 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:835 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085 - registration status: 204
2020-06-02 02:48:45,726 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:206 - Tomcat started on port(s): 8085 (http) with context path ''
2020-06-02 02:48:45,726 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration] EurekaAutoServiceRegistration.java:124 - Updating port to 8085
2020-06-02 02:48:45,728 [main] INFO  [com.sqq.order.SqqOrderApplication] StartupInfoLogger.java:59 - Started SqqOrderApplication in 4.676 seconds (JVM running for 5.54)
2020-06-02 03:15:25,388 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1da2cb77: startup date [Tue Jun 02 03:15:25 CST 2020]; root of context hierarchy
2020-06-02 03:15:25,593 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 03:15:25,622 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1f6dfd52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 03:15:25,896 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 03:15:25,947 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-02 03:15:26,243 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-02 03:15:26,244 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-02 03:15:26,351 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-02 03:15:26,352 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-02 03:15:26,557 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 03:15:26,693 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-02 03:15:26,693 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-02 03:15:26,693 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-02 03:15:26,694 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-02 03:15:26,694 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-02 03:15:26,694 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-02 03:15:26,694 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-02 03:15:26,836 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-02 03:15:26,839 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1311 - Not registering with Eureka server per configuration
2020-06-02 03:15:26,842 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591038926841 with initial instances count: 3
2020-06-02 03:15:27,169 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:205 - Fetching config from server at : http://192.168.1.3:4001/
2020-06-02 03:15:27,511 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:149 - Located environment: name=sqq-order, profiles=[dev], label=null, version=null, state=null
2020-06-02 03:15:27,512 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:98 - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='classpath:/resposity/sqq-order-dev.yml'}]}
2020-06-02 03:15:27,515 [main] INFO  [com.sqq.order.SqqOrderApplication] SpringApplication.java:658 - The following profiles are active: dev
2020-06-02 03:15:27,531 [main] INFO  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3bead518: startup date [Tue Jun 02 03:15:27 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1da2cb77
2020-06-02 03:15:28,482 [main] INFO  [o.s.b.factory.support.DefaultListableBeanFactory] DefaultListableBeanFactory.java:821 - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-06-02 03:15:28,644 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:294 - BeanFactory id=60453ea5-0a69-3a6f-84a1-bf1c7fcd27ae
2020-06-02 03:15:28,662 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 03:15:28,788 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$353fa55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 03:15:28,868 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1f6dfd52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 03:15:29,184 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:91 - Tomcat initialized with port(s): 8085 (http)
2020-06-02 03:15:29,194 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Initializing ProtocolHandler ["http-nio-8085"]
2020-06-02 03:15:29,202 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:180 - Starting service [Tomcat]
2020-06-02 03:15:29,202 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:180 - Starting Servlet Engine: Apache Tomcat/8.5.34
2020-06-02 03:15:29,206 [localhost-startStop-1] INFO  [org.apache.catalina.core.AprLifecycleListener] DirectJDKLog.java:180 - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\IDM Computer Solutions\UltraEdit;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\WIN10\AppData\Local\Microsoft\WindowsApps;D:\Program Files (x86)\Microsoft VS Code Insiders\bin;D:\apache-maven-3.6.1\bin;C:\Users\WIN10\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;;.]
2020-06-02 03:15:29,354 [localhost-startStop-1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:180 - Initializing Spring embedded WebApplicationContext
2020-06-02 03:15:29,354 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 1823 ms
2020-06-02 03:15:29,590 [localhost-startStop-1] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-02 03:15:29,591 [localhost-startStop-1] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 03:15:29,598 [localhost-startStop-1] INFO  [com.netflix.config.DynamicPropertyFactory] DynamicPropertyFactory.java:281 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6ebbfb9c
2020-06-02 03:15:32,128 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-06-02 03:15:32,130 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-06-02 03:15:32,130 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-06-02 03:15:32,130 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-06-02 03:15:32,130 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'requestContextFilter' to: [/*]
2020-06-02 03:15:32,130 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpTraceFilter' to: [/*]
2020-06-02 03:15:32,130 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.ServletRegistrationBean] ServletRegistrationBean.java:187 - Servlet dispatcherServlet mapped to [/]
2020-06-02 03:15:32,361 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing FeignContext-sqq-user: startup date [Tue Jun 02 03:15:32 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3bead518
2020-06-02 03:15:32,374 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 03:15:32,599 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:80 - HikariPool-1 - Starting...
2020-06-02 03:15:32,700 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:82 - HikariPool-1 - Start completed.
2020-06-02 03:15:32,700 [main] INFO  [com.codingapi.txlcn.tc.corelog.H2DbHelper] H2DbHelper.java:52 - Init H2 DATABASE at D:\spring-cloud-demo-worker\sqq-spring-cloud\.txlcn\sqq-order-8085
2020-06-02 03:15:32,972 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-02 03:15:32,972 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 03:15:33,043 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 03:15:33,210 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerAdapter] RequestMappingHandlerAdapter.java:588 - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3bead518: startup date [Tue Jun 02 03:15:27 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1da2cb77
2020-06-02 03:15:33,255 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/getOrderById/{orderId}],methods=[GET]}" onto public void com.sqq.order.controller.OrderController.getOrderById(java.lang.Integer)
2020-06-02 03:15:33,255 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/newOrder],methods=[POST]}" onto public void com.sqq.order.controller.OrderController.newOrder(com.sqq.order.vo.NewOrder)
2020-06-02 03:15:33,258 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-06-02 03:15:33,258 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-02 03:15:33,315 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 03:15:33,315 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 03:15:34,021 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:888 - Shutting down DiscoveryClient ...
2020-06-02 03:15:34,028 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:911 - Completed shut down of DiscoveryClient
2020-06-02 03:15:34,042 [main] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:59 - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-06-02 03:15:34,051 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-02 03:15:34,052 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-02 03:15:34,053 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-02 03:15:34,099 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:433 - Registering beans for JMX exposure on startup
2020-06-02 03:15:34,100 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'logDbProperties' has been autodetected for JMX exposure
2020-06-02 03:15:34,101 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-06-02 03:15:34,107 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-06-02 03:15:34,108 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-06-02 03:15:34,109 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-06-02 03:15:34,112 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-06-02 03:15:34,119 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-06-02 03:15:34,127 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'logDbProperties': registering with JMX server as MBean [com.codingapi.txlcn.logger.db:name=logDbProperties,type=LogDbProperties]
2020-06-02 03:15:34,129 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3bead518,type=ConfigurationPropertiesRebinder]
2020-06-02 03:15:34,135 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-06-02 03:15:34,153 [main] INFO  [o.s.context.support.DefaultLifecycleProcessor] DefaultLifecycleProcessor.java:356 - Starting beans in phase 0
2020-06-02 03:15:34,167 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 03:15:34,171 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-02 03:15:34,174 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-02 03:15:34,174 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-02 03:15:34,174 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-02 03:15:34,174 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-02 03:15:34,237 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 03:15:34,237 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-02 03:15:34,237 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-02 03:15:34,237 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-02 03:15:34,237 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-02 03:15:34,237 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-02 03:15:34,237 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-02 03:15:34,237 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-02 03:15:34,241 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-02 03:15:34,242 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1264 - Starting heartbeat executor: renew interval is: 5
2020-06-02 03:15:34,243 [main] INFO  [com.netflix.discovery.InstanceInfoReplicator] InstanceInfoReplicator.java:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-06-02 03:15:34,244 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591038934244 with initial instances count: 3
2020-06-02 03:15:34,250 [main] INFO  [o.s.c.n.e.serviceregistry.EurekaServiceRegistry] EurekaServiceRegistry.java:42 - Registering application SQQ-ORDER with eureka with status UP
2020-06-02 03:15:34,251 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1299 - Saw local status change event StatusChangeEvent [timestamp=1591038934251, current=UP, previous=STARTING]
2020-06-02 03:15:34,252 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:826 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085: registering service...
2020-06-02 03:15:34,263 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Starting ProtocolHandler ["http-nio-8085"]
2020-06-02 03:15:34,273 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] DirectJDKLog.java:180 - Using a shared selector for servlet write/read
2020-06-02 03:15:34,276 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:835 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085 - registration status: 204
2020-06-02 03:15:34,284 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:206 - Tomcat started on port(s): 8085 (http) with context path ''
2020-06-02 03:15:34,284 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration] EurekaAutoServiceRegistration.java:124 - Updating port to 8085
2020-06-02 03:15:34,286 [main] INFO  [com.sqq.order.SqqOrderApplication] StartupInfoLogger.java:59 - Started SqqOrderApplication in 9.952 seconds (JVM running for 10.961)
2020-06-02 03:15:34,320 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 1
2020-06-02 03:15:34,618 [Thread-32] INFO  [com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack] TCSideRpcInitCallBack.java:77 - Send init message to TM[/127.0.0.1:8070]
2020-06-02 03:15:34,645 [main] INFO  [com.codingapi.txlcn.tc.corelog.txc.TxcLogHelper] TxcLogHelper.java:59 - Txc log table finish (H2 DATABASE)
2020-06-02 03:15:34,647 [main] INFO  [c.c.txlcn.tc.corelog.aspect.AspectLogHelper] AspectLogHelper.java:62 - Aspect log table finished (H2 DATABASE)
2020-06-02 03:15:34,724 [RMI TCP Connection(8)-127.0.0.1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:180 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-06-02 03:15:34,724 [RMI TCP Connection(8)-127.0.0.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:494 - FrameworkServlet 'dispatcherServlet': initialization started
2020-06-02 03:15:34,726 [RMI TCP Connection(6)-127.0.0.1] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:110 - HikariPool-2 - Starting...
2020-06-02 03:15:34,742 [RMI TCP Connection(8)-127.0.0.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:509 - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2020-06-02 03:15:34,889 [Thread-32] INFO  [com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack] TCSideRpcInitCallBack.java:92 - Finally, determined dtx time is 30000ms, tm rpc timeout is 1000 ms, machineId is 1
2020-06-02 03:15:34,890 [Thread-32] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:72 - Searching for more TM...
2020-06-02 03:15:34,912 [Thread-32] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:106 - TC[sqq-order:8085] established TM cluster successfully!
2020-06-02 03:15:34,912 [Thread-32] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:111 - TM cluster's size: 1
2020-06-02 03:15:34,914 [RMI TCP Connection(6)-127.0.0.1] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:123 - HikariPool-2 - Start completed.
2020-06-02 03:15:34,931 [RMI TCP Connection(6)-127.0.0.1] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:205 - Fetching config from server at : http://192.168.1.3:4001/
2020-06-02 03:15:35,141 [RMI TCP Connection(6)-127.0.0.1] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:149 - Located environment: name=sqq-order, profiles=[dev], label=null, version=null, state=null
2020-06-02 03:16:30,899 [http-nio-8085-exec-1] INFO  [com.sqq.order.service.impl.OrderServiceImpl] OrderServiceImpl.java:32 - 使用fegin调用用户服务的修改积分服务NewOrder(userId=1, price=30.0)
2020-06-02 03:16:30,909 [http-nio-8085-exec-1] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing SpringClientFactory-sqq-user: startup date [Tue Jun 02 03:16:30 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3bead518
2020-06-02 03:16:30,958 [http-nio-8085-exec-1] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 03:16:31,191 [http-nio-8085-exec-1] INFO  [com.netflix.util.concurrent.ShutdownEnabledTimer] ShutdownEnabledTimer.java:58 - Shutdown hook installed for: NFLoadBalancer-PingTimer-sqq-user
2020-06-02 03:16:31,196 [http-nio-8085-exec-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:192 - Client: sqq-user instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=sqq-user,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-06-02 03:16:31,201 [http-nio-8085-exec-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-06-02 03:16:31,214 [http-nio-8085-exec-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: sqq-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-06-02 03:16:31,216 [http-nio-8085-exec-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client sqq-user initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=sqq-user,current list of Servers=[192.168.1.3:8083],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.3:8083;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@43af04c2
2020-06-02 03:16:31,454 [http-nio-8085-exec-1] INFO  [com.sqq.order.service.impl.OrderServiceImpl] OrderServiceImpl.java:37 - 新增订单NewOrder(userId=1, price=30.0)
2020-06-02 03:16:31,455 [http-nio-8085-exec-1] ERROR [com.codingapi.txlcn.tc.core.DTXServiceExecutor] AbstractTxLogger.java:70 - business code error @group(9ca25a7083537)
2020-06-02 03:16:31,538 [http-nio-8085-exec-1] ERROR [com.sqq.order.controller.OrderController] OrderController.java:29 - 新建订单出错
java.lang.Exception: 测试事务
	at com.sqq.order.service.impl.OrderServiceImpl.saveOrder(OrderServiceImpl.java:44)
	at com.sqq.order.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$eabb1954.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.codingapi.txlcn.tc.core.DTXLocalControl.doBusinessCode(DTXLocalControl.java:44)
	at com.codingapi.txlcn.tc.core.DTXServiceExecutor.transactionRunning(DTXServiceExecutor.java:91)
	at com.codingapi.txlcn.tc.aspect.weave.DTXLogicWeaver.runTransaction(DTXLogicWeaver.java:96)
	at com.codingapi.txlcn.tc.aspect.TransactionAspect.runWithLcnTransaction(TransactionAspect.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.sqq.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$b4097e77.saveOrder(<generated>)
	at com.sqq.order.controller.OrderController.newOrder(OrderController.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-06-02 03:16:32,204 [PollingServerListUpdater-0] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: sqq-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-06-02 03:19:02,330 [http-nio-8085-exec-3] INFO  [com.sqq.order.service.impl.OrderServiceImpl] OrderServiceImpl.java:32 - 使用fegin调用用户服务的修改积分服务NewOrder(userId=1, price=30.0)
2020-06-02 03:19:03,335 [http-nio-8085-exec-3] ERROR [com.codingapi.txlcn.tc.core.DTXServiceExecutor] AbstractTxLogger.java:70 - business code error @group(9ca27f4e33537)
2020-06-02 03:19:03,359 [http-nio-8085-exec-3] ERROR [com.sqq.order.controller.OrderController] OrderController.java:29 - 新建订单出错
feign.RetryableException: Read timed out executing POST http://sqq-user/user/updateUser
	at feign.FeignException.errorExecuting(FeignException.java:65)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:105)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:77)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:102)
	at com.sun.proxy.$Proxy151.updateUser(Unknown Source)
	at com.sqq.order.service.impl.OrderServiceImpl.saveOrder(OrderServiceImpl.java:36)
	at com.sqq.order.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$eabb1954.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.codingapi.txlcn.tc.core.DTXLocalControl.doBusinessCode(DTXLocalControl.java:44)
	at com.codingapi.txlcn.tc.core.DTXServiceExecutor.transactionRunning(DTXServiceExecutor.java:91)
	at com.codingapi.txlcn.tc.aspect.weave.DTXLogicWeaver.runTransaction(DTXLogicWeaver.java:96)
	at com.codingapi.txlcn.tc.aspect.TransactionAspect.runWithLcnTransaction(TransactionAspect.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.sqq.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$b4097e77.saveOrder(<generated>)
	at com.sqq.order.controller.OrderController.newOrder(OrderController.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:735)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:678)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1587)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:150)
	at feign.Client$Default.execute(Client.java:72)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:98)
	... 93 common frames omitted
2020-06-02 03:20:34,240 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 03:22:08,839 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@28f2a10f: startup date [Tue Jun 02 03:22:08 CST 2020]; root of context hierarchy
2020-06-02 03:22:09,013 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 03:22:09,032 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$abc26de5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 03:22:09,284 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 03:22:09,324 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-02 03:22:09,591 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-02 03:22:09,592 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-02 03:22:09,665 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-02 03:22:09,665 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-02 03:22:09,826 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 03:22:09,950 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-02 03:22:09,951 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-02 03:22:09,951 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-02 03:22:09,951 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-02 03:22:09,951 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-02 03:22:09,951 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-02 03:22:09,952 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-02 03:22:10,066 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-02 03:22:10,068 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1311 - Not registering with Eureka server per configuration
2020-06-02 03:22:10,072 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591039330070 with initial instances count: 4
2020-06-02 03:22:10,320 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:205 - Fetching config from server at : http://192.168.1.3:4001/
2020-06-02 03:22:10,549 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:149 - Located environment: name=sqq-order, profiles=[dev], label=null, version=null, state=null
2020-06-02 03:22:10,549 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:98 - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='classpath:/resposity/sqq-order-dev.yml'}]}
2020-06-02 03:22:10,551 [main] INFO  [com.sqq.order.SqqOrderApplication] SpringApplication.java:658 - The following profiles are active: dev
2020-06-02 03:22:10,564 [main] INFO  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@48535004: startup date [Tue Jun 02 03:22:10 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@28f2a10f
2020-06-02 03:22:11,322 [main] INFO  [o.s.b.factory.support.DefaultListableBeanFactory] DefaultListableBeanFactory.java:821 - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-06-02 03:22:11,422 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:294 - BeanFactory id=60453ea5-0a69-3a6f-84a1-bf1c7fcd27ae
2020-06-02 03:22:11,434 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 03:22:11,517 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8fa86ae8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 03:22:11,579 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$abc26de5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 03:22:11,875 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:91 - Tomcat initialized with port(s): 8085 (http)
2020-06-02 03:22:11,884 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Initializing ProtocolHandler ["http-nio-8085"]
2020-06-02 03:22:11,890 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:180 - Starting service [Tomcat]
2020-06-02 03:22:11,891 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:180 - Starting Servlet Engine: Apache Tomcat/8.5.34
2020-06-02 03:22:11,893 [localhost-startStop-1] INFO  [org.apache.catalina.core.AprLifecycleListener] DirectJDKLog.java:180 - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\IDM Computer Solutions\UltraEdit;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\WIN10\AppData\Local\Microsoft\WindowsApps;D:\Program Files (x86)\Microsoft VS Code Insiders\bin;D:\apache-maven-3.6.1\bin;C:\Users\WIN10\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;;.]
2020-06-02 03:22:12,023 [localhost-startStop-1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:180 - Initializing Spring embedded WebApplicationContext
2020-06-02 03:22:12,023 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 1459 ms
2020-06-02 03:22:12,205 [localhost-startStop-1] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-02 03:22:12,205 [localhost-startStop-1] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 03:22:12,211 [localhost-startStop-1] INFO  [com.netflix.config.DynamicPropertyFactory] DynamicPropertyFactory.java:281 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2cc1641c
2020-06-02 03:22:13,456 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-06-02 03:22:13,456 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-06-02 03:22:13,456 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-06-02 03:22:13,457 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-06-02 03:22:13,457 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'requestContextFilter' to: [/*]
2020-06-02 03:22:13,457 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpTraceFilter' to: [/*]
2020-06-02 03:22:13,457 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.ServletRegistrationBean] ServletRegistrationBean.java:187 - Servlet dispatcherServlet mapped to [/]
2020-06-02 03:22:13,637 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing FeignContext-sqq-user: startup date [Tue Jun 02 03:22:13 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@48535004
2020-06-02 03:22:13,647 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 03:22:13,805 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:80 - HikariPool-1 - Starting...
2020-06-02 03:22:13,886 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:82 - HikariPool-1 - Start completed.
2020-06-02 03:22:13,886 [main] INFO  [com.codingapi.txlcn.tc.corelog.H2DbHelper] H2DbHelper.java:52 - Init H2 DATABASE at D:\spring-cloud-demo-worker\sqq-spring-cloud\.txlcn\sqq-order-8085
2020-06-02 03:22:14,136 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-02 03:22:14,136 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 03:22:14,203 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 03:22:14,368 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerAdapter] RequestMappingHandlerAdapter.java:588 - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@48535004: startup date [Tue Jun 02 03:22:10 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@28f2a10f
2020-06-02 03:22:14,410 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/getOrderById/{orderId}],methods=[GET]}" onto public void com.sqq.order.controller.OrderController.getOrderById(java.lang.Integer)
2020-06-02 03:22:14,410 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/newOrder],methods=[POST]}" onto public void com.sqq.order.controller.OrderController.newOrder(com.sqq.order.vo.NewOrder)
2020-06-02 03:22:14,413 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-06-02 03:22:14,413 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-02 03:22:14,445 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 03:22:14,445 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 03:22:15,058 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:888 - Shutting down DiscoveryClient ...
2020-06-02 03:22:15,063 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:911 - Completed shut down of DiscoveryClient
2020-06-02 03:22:15,075 [main] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:59 - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-06-02 03:22:15,083 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-02 03:22:15,084 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-02 03:22:15,084 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-02 03:22:15,127 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:433 - Registering beans for JMX exposure on startup
2020-06-02 03:22:15,128 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'logDbProperties' has been autodetected for JMX exposure
2020-06-02 03:22:15,129 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-06-02 03:22:15,136 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-06-02 03:22:15,137 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-06-02 03:22:15,138 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-06-02 03:22:15,140 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-06-02 03:22:15,146 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-06-02 03:22:15,153 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'logDbProperties': registering with JMX server as MBean [com.codingapi.txlcn.logger.db:name=logDbProperties,type=LogDbProperties]
2020-06-02 03:22:15,154 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=48535004,type=ConfigurationPropertiesRebinder]
2020-06-02 03:22:15,159 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-06-02 03:22:15,171 [main] INFO  [o.s.context.support.DefaultLifecycleProcessor] DefaultLifecycleProcessor.java:356 - Starting beans in phase 0
2020-06-02 03:22:15,178 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 03:22:15,181 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-02 03:22:15,184 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-02 03:22:15,184 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-02 03:22:15,184 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-02 03:22:15,184 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-02 03:22:15,230 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 03:22:15,231 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-02 03:22:15,231 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-02 03:22:15,231 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-02 03:22:15,231 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-02 03:22:15,231 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-02 03:22:15,231 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-02 03:22:15,231 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-02 03:22:15,235 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-02 03:22:15,236 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1264 - Starting heartbeat executor: renew interval is: 5
2020-06-02 03:22:15,237 [main] INFO  [com.netflix.discovery.InstanceInfoReplicator] InstanceInfoReplicator.java:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-06-02 03:22:15,238 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591039335238 with initial instances count: 4
2020-06-02 03:22:15,244 [main] INFO  [o.s.c.n.e.serviceregistry.EurekaServiceRegistry] EurekaServiceRegistry.java:42 - Registering application SQQ-ORDER with eureka with status UP
2020-06-02 03:22:15,244 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1299 - Saw local status change event StatusChangeEvent [timestamp=1591039335244, current=UP, previous=STARTING]
2020-06-02 03:22:15,246 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:826 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085: registering service...
2020-06-02 03:22:15,257 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Starting ProtocolHandler ["http-nio-8085"]
2020-06-02 03:22:15,268 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:835 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085 - registration status: 204
2020-06-02 03:22:15,268 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] DirectJDKLog.java:180 - Using a shared selector for servlet write/read
2020-06-02 03:22:15,278 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:206 - Tomcat started on port(s): 8085 (http) with context path ''
2020-06-02 03:22:15,279 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration] EurekaAutoServiceRegistration.java:124 - Updating port to 8085
2020-06-02 03:22:15,281 [main] INFO  [com.sqq.order.SqqOrderApplication] StartupInfoLogger.java:59 - Started SqqOrderApplication in 7.045 seconds (JVM running for 8.088)
2020-06-02 03:22:15,316 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 1
2020-06-02 03:22:15,610 [Thread-27] INFO  [com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack] TCSideRpcInitCallBack.java:77 - Send init message to TM[/127.0.0.1:8070]
2020-06-02 03:22:15,623 [main] INFO  [com.codingapi.txlcn.tc.corelog.txc.TxcLogHelper] TxcLogHelper.java:59 - Txc log table finish (H2 DATABASE)
2020-06-02 03:22:15,624 [main] INFO  [c.c.txlcn.tc.corelog.aspect.AspectLogHelper] AspectLogHelper.java:62 - Aspect log table finished (H2 DATABASE)
2020-06-02 03:22:15,768 [Thread-27] INFO  [com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack] TCSideRpcInitCallBack.java:92 - Finally, determined dtx time is 30000ms, tm rpc timeout is 1000 ms, machineId is 4
2020-06-02 03:22:15,769 [Thread-27] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:72 - Searching for more TM...
2020-06-02 03:22:15,795 [Thread-27] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:106 - TC[sqq-order:8085] established TM cluster successfully!
2020-06-02 03:22:15,795 [Thread-27] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:111 - TM cluster's size: 1
2020-06-02 03:22:15,976 [RMI TCP Connection(4)-127.0.0.1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:180 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-06-02 03:22:15,977 [RMI TCP Connection(4)-127.0.0.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:494 - FrameworkServlet 'dispatcherServlet': initialization started
2020-06-02 03:22:15,978 [RMI TCP Connection(2)-127.0.0.1] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:110 - HikariPool-2 - Starting...
2020-06-02 03:22:15,996 [RMI TCP Connection(4)-127.0.0.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:509 - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2020-06-02 03:22:16,159 [RMI TCP Connection(2)-127.0.0.1] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:123 - HikariPool-2 - Start completed.
2020-06-02 03:22:16,178 [RMI TCP Connection(2)-127.0.0.1] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:205 - Fetching config from server at : http://192.168.1.3:4001/
2020-06-02 03:22:16,410 [RMI TCP Connection(2)-127.0.0.1] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:149 - Located environment: name=sqq-order, profiles=[dev], label=null, version=null, state=null
2020-06-02 03:22:46,144 [http-nio-8085-exec-1] INFO  [com.sqq.order.service.impl.OrderServiceImpl] OrderServiceImpl.java:32 - 使用fegin调用用户服务的修改积分服务NewOrder(userId=1, price=30.0)
2020-06-02 03:22:46,153 [http-nio-8085-exec-1] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing SpringClientFactory-sqq-user: startup date [Tue Jun 02 03:22:46 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@48535004
2020-06-02 03:22:46,202 [http-nio-8085-exec-1] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 03:22:46,414 [http-nio-8085-exec-1] INFO  [com.netflix.util.concurrent.ShutdownEnabledTimer] ShutdownEnabledTimer.java:58 - Shutdown hook installed for: NFLoadBalancer-PingTimer-sqq-user
2020-06-02 03:22:46,418 [http-nio-8085-exec-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:192 - Client: sqq-user instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=sqq-user,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-06-02 03:22:46,423 [http-nio-8085-exec-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-06-02 03:22:46,436 [http-nio-8085-exec-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: sqq-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-06-02 03:22:46,437 [http-nio-8085-exec-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client sqq-user initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=sqq-user,current list of Servers=[192.168.1.3:8083],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.3:8083;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@12826a54
2020-06-02 03:22:46,676 [http-nio-8085-exec-1] INFO  [com.sqq.order.service.impl.OrderServiceImpl] OrderServiceImpl.java:37 - 新增订单NewOrder(userId=1, price=30.0)
2020-06-02 03:22:46,687 [http-nio-8085-exec-1] ERROR [com.sqq.order.controller.OrderController] OrderController.java:29 - 新建订单出错
java.lang.Exception: 测试事务
	at com.sqq.order.service.impl.OrderServiceImpl.saveOrder(OrderServiceImpl.java:44)
	at com.sqq.order.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$eabb1954.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.sqq.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$de653819.saveOrder(<generated>)
	at com.sqq.order.controller.OrderController.newOrder(OrderController.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-06-02 03:22:47,426 [PollingServerListUpdater-0] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: sqq-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-06-02 03:24:33,893 [http-nio-8085-exec-2] INFO  [com.sqq.order.service.impl.OrderServiceImpl] OrderServiceImpl.java:32 - 使用fegin调用用户服务的修改积分服务NewOrder(userId=1, price=30.0)
2020-06-02 03:24:34,105 [http-nio-8085-exec-2] INFO  [com.sqq.order.service.impl.OrderServiceImpl] OrderServiceImpl.java:37 - 新增订单NewOrder(userId=1, price=30.0)
2020-06-02 03:24:34,116 [http-nio-8085-exec-2] ERROR [com.sqq.order.controller.OrderController] OrderController.java:29 - 新建订单出错
java.lang.Exception: 测试事务
	at com.sqq.order.service.impl.OrderServiceImpl.saveOrder(OrderServiceImpl.java:44)
	at com.sqq.order.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$eabb1954.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.sqq.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$de653819.saveOrder(<generated>)
	at com.sqq.order.controller.OrderController.newOrder(OrderController.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-06-02 03:25:51,667 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4d02f94e: startup date [Tue Jun 02 03:25:51 CST 2020]; root of context hierarchy
2020-06-02 03:25:51,855 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 03:25:51,873 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$41ff658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 03:25:52,161 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 03:25:52,214 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-02 03:25:52,494 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-02 03:25:52,495 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-02 03:25:52,569 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-02 03:25:52,569 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-02 03:25:52,734 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 03:25:52,852 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-02 03:25:52,852 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-02 03:25:52,853 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-02 03:25:52,853 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-02 03:25:52,853 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-02 03:25:52,853 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-02 03:25:52,853 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-02 03:25:52,967 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-02 03:25:52,969 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1311 - Not registering with Eureka server per configuration
2020-06-02 03:25:52,972 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591039552971 with initial instances count: 5
2020-06-02 03:25:53,225 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:205 - Fetching config from server at : http://192.168.1.3:4001/
2020-06-02 03:25:53,453 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:149 - Located environment: name=sqq-order, profiles=[dev], label=null, version=null, state=null
2020-06-02 03:25:53,453 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:98 - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='classpath:/resposity/sqq-order-dev.yml'}]}
2020-06-02 03:25:53,455 [main] INFO  [com.sqq.order.SqqOrderApplication] SpringApplication.java:658 - The following profiles are active: dev
2020-06-02 03:25:53,472 [main] INFO  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63fdffcd: startup date [Tue Jun 02 03:25:53 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4d02f94e
2020-06-02 03:25:54,302 [main] INFO  [o.s.b.factory.support.DefaultListableBeanFactory] DefaultListableBeanFactory.java:821 - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-06-02 03:25:54,411 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:294 - BeanFactory id=60453ea5-0a69-3a6f-84a1-bf1c7fcd27ae
2020-06-02 03:25:54,425 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 03:25:54,507 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e805f35b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 03:25:54,568 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$41ff658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 03:25:54,869 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:91 - Tomcat initialized with port(s): 8085 (http)
2020-06-02 03:25:54,877 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Initializing ProtocolHandler ["http-nio-8085"]
2020-06-02 03:25:54,884 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:180 - Starting service [Tomcat]
2020-06-02 03:25:54,884 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:180 - Starting Servlet Engine: Apache Tomcat/8.5.34
2020-06-02 03:25:54,887 [localhost-startStop-1] INFO  [org.apache.catalina.core.AprLifecycleListener] DirectJDKLog.java:180 - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\IDM Computer Solutions\UltraEdit;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\WIN10\AppData\Local\Microsoft\WindowsApps;D:\Program Files (x86)\Microsoft VS Code Insiders\bin;D:\apache-maven-3.6.1\bin;C:\Users\WIN10\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;;.]
2020-06-02 03:25:55,038 [localhost-startStop-1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:180 - Initializing Spring embedded WebApplicationContext
2020-06-02 03:25:55,039 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 1567 ms
2020-06-02 03:25:55,293 [localhost-startStop-1] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-02 03:25:55,293 [localhost-startStop-1] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 03:25:55,299 [localhost-startStop-1] INFO  [com.netflix.config.DynamicPropertyFactory] DynamicPropertyFactory.java:281 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1c8dc32c
2020-06-02 03:25:56,619 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-06-02 03:25:56,620 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-06-02 03:25:56,620 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-06-02 03:25:56,620 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-06-02 03:25:56,620 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'requestContextFilter' to: [/*]
2020-06-02 03:25:56,620 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpTraceFilter' to: [/*]
2020-06-02 03:25:56,621 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.ServletRegistrationBean] ServletRegistrationBean.java:187 - Servlet dispatcherServlet mapped to [/]
2020-06-02 03:25:56,805 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing FeignContext-sqq-user: startup date [Tue Jun 02 03:25:56 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63fdffcd
2020-06-02 03:25:56,817 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 03:25:56,981 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:80 - HikariPool-1 - Starting...
2020-06-02 03:25:57,063 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:82 - HikariPool-1 - Start completed.
2020-06-02 03:25:57,064 [main] INFO  [com.codingapi.txlcn.tc.corelog.H2DbHelper] H2DbHelper.java:52 - Init H2 DATABASE at D:\spring-cloud-demo-worker\sqq-spring-cloud\.txlcn\sqq-order-8085
2020-06-02 03:25:57,346 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-02 03:25:57,346 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 03:25:57,417 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 03:25:57,567 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerAdapter] RequestMappingHandlerAdapter.java:588 - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63fdffcd: startup date [Tue Jun 02 03:25:53 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4d02f94e
2020-06-02 03:25:57,612 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/getOrderById/{orderId}],methods=[GET]}" onto public void com.sqq.order.controller.OrderController.getOrderById(java.lang.Integer)
2020-06-02 03:25:57,613 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/newOrder],methods=[POST]}" onto public void com.sqq.order.controller.OrderController.newOrder(com.sqq.order.vo.NewOrder)
2020-06-02 03:25:57,615 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-06-02 03:25:57,615 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-02 03:25:57,650 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 03:25:57,650 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 03:25:58,381 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:888 - Shutting down DiscoveryClient ...
2020-06-02 03:25:58,386 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:911 - Completed shut down of DiscoveryClient
2020-06-02 03:25:58,400 [main] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:59 - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-06-02 03:25:58,410 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-02 03:25:58,411 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-02 03:25:58,411 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-02 03:25:58,460 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:433 - Registering beans for JMX exposure on startup
2020-06-02 03:25:58,461 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'logDbProperties' has been autodetected for JMX exposure
2020-06-02 03:25:58,462 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-06-02 03:25:58,468 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-06-02 03:25:58,469 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-06-02 03:25:58,470 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-06-02 03:25:58,474 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-06-02 03:25:58,481 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-06-02 03:25:58,489 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'logDbProperties': registering with JMX server as MBean [com.codingapi.txlcn.logger.db:name=logDbProperties,type=LogDbProperties]
2020-06-02 03:25:58,491 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=63fdffcd,type=ConfigurationPropertiesRebinder]
2020-06-02 03:25:58,497 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-06-02 03:25:58,511 [main] INFO  [o.s.context.support.DefaultLifecycleProcessor] DefaultLifecycleProcessor.java:356 - Starting beans in phase 0
2020-06-02 03:25:58,518 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 03:25:58,523 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-02 03:25:58,526 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-02 03:25:58,526 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-02 03:25:58,526 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-02 03:25:58,526 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-02 03:25:58,572 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 03:25:58,573 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-02 03:25:58,573 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-02 03:25:58,573 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-02 03:25:58,573 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-02 03:25:58,573 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-02 03:25:58,573 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-02 03:25:58,573 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-02 03:25:58,577 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-02 03:25:58,578 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1264 - Starting heartbeat executor: renew interval is: 5
2020-06-02 03:25:58,579 [main] INFO  [com.netflix.discovery.InstanceInfoReplicator] InstanceInfoReplicator.java:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-06-02 03:25:58,580 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591039558580 with initial instances count: 5
2020-06-02 03:25:58,586 [main] INFO  [o.s.c.n.e.serviceregistry.EurekaServiceRegistry] EurekaServiceRegistry.java:42 - Registering application SQQ-ORDER with eureka with status UP
2020-06-02 03:25:58,586 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1299 - Saw local status change event StatusChangeEvent [timestamp=1591039558586, current=UP, previous=STARTING]
2020-06-02 03:25:58,587 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:826 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085: registering service...
2020-06-02 03:25:58,598 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Starting ProtocolHandler ["http-nio-8085"]
2020-06-02 03:25:58,609 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] DirectJDKLog.java:180 - Using a shared selector for servlet write/read
2020-06-02 03:25:58,610 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:835 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085 - registration status: 204
2020-06-02 03:25:58,619 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:206 - Tomcat started on port(s): 8085 (http) with context path ''
2020-06-02 03:25:58,620 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration] EurekaAutoServiceRegistration.java:124 - Updating port to 8085
2020-06-02 03:25:58,622 [main] INFO  [com.sqq.order.SqqOrderApplication] StartupInfoLogger.java:59 - Started SqqOrderApplication in 7.837 seconds (JVM running for 8.854)
2020-06-02 03:25:58,658 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 1
2020-06-02 03:25:58,927 [Thread-29] INFO  [com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack] TCSideRpcInitCallBack.java:77 - Send init message to TM[/127.0.0.1:8070]
2020-06-02 03:25:58,936 [main] INFO  [com.codingapi.txlcn.tc.corelog.txc.TxcLogHelper] TxcLogHelper.java:59 - Txc log table finish (H2 DATABASE)
2020-06-02 03:25:58,936 [main] INFO  [c.c.txlcn.tc.corelog.aspect.AspectLogHelper] AspectLogHelper.java:62 - Aspect log table finished (H2 DATABASE)
2020-06-02 03:25:59,050 [Thread-29] INFO  [com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack] TCSideRpcInitCallBack.java:92 - Finally, determined dtx time is 30000ms, tm rpc timeout is 1000 ms, machineId is 8
2020-06-02 03:25:59,051 [Thread-29] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:72 - Searching for more TM...
2020-06-02 03:25:59,070 [Thread-29] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:106 - TC[sqq-order:8085] established TM cluster successfully!
2020-06-02 03:25:59,071 [Thread-29] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:111 - TM cluster's size: 1
2020-06-02 03:25:59,389 [RMI TCP Connection(4)-127.0.0.1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:180 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-06-02 03:25:59,389 [RMI TCP Connection(4)-127.0.0.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:494 - FrameworkServlet 'dispatcherServlet': initialization started
2020-06-02 03:25:59,391 [RMI TCP Connection(2)-127.0.0.1] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:110 - HikariPool-2 - Starting...
2020-06-02 03:25:59,403 [RMI TCP Connection(4)-127.0.0.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:509 - FrameworkServlet 'dispatcherServlet': initialization completed in 14 ms
2020-06-02 03:25:59,552 [RMI TCP Connection(2)-127.0.0.1] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:123 - HikariPool-2 - Start completed.
2020-06-02 03:25:59,567 [RMI TCP Connection(2)-127.0.0.1] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:205 - Fetching config from server at : http://192.168.1.3:4001/
2020-06-02 03:25:59,740 [RMI TCP Connection(2)-127.0.0.1] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:149 - Located environment: name=sqq-order, profiles=[dev], label=null, version=null, state=null
2020-06-02 03:29:37,549 [http-nio-8085-exec-1] INFO  [com.sqq.order.service.impl.OrderServiceImpl] OrderServiceImpl.java:32 - 使用fegin调用用户服务的修改积分服务NewOrder(userId=1, price=30.0)
2020-06-02 03:29:37,557 [http-nio-8085-exec-1] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing SpringClientFactory-sqq-user: startup date [Tue Jun 02 03:29:37 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63fdffcd
2020-06-02 03:29:37,602 [http-nio-8085-exec-1] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 03:29:37,823 [http-nio-8085-exec-1] INFO  [com.netflix.util.concurrent.ShutdownEnabledTimer] ShutdownEnabledTimer.java:58 - Shutdown hook installed for: NFLoadBalancer-PingTimer-sqq-user
2020-06-02 03:29:37,827 [http-nio-8085-exec-1] INFO  [com.netflix.loadbalancer.BaseLoadBalancer] BaseLoadBalancer.java:192 - Client: sqq-user instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=sqq-user,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-06-02 03:29:37,831 [http-nio-8085-exec-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:222 - Using serverListUpdater PollingServerListUpdater
2020-06-02 03:29:37,844 [http-nio-8085-exec-1] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: sqq-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-06-02 03:29:37,846 [http-nio-8085-exec-1] INFO  [c.n.loadbalancer.DynamicServerListLoadBalancer] DynamicServerListLoadBalancer.java:150 - DynamicServerListLoadBalancer for client sqq-user initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=sqq-user,current list of Servers=[192.168.1.3:8083],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.3:8083;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@300afc1d
2020-06-02 03:29:38,100 [http-nio-8085-exec-1] INFO  [com.sqq.order.service.impl.OrderServiceImpl] OrderServiceImpl.java:37 - 新增订单NewOrder(userId=1, price=30.0)
2020-06-02 03:29:38,101 [http-nio-8085-exec-1] ERROR [com.codingapi.txlcn.tc.core.DTXServiceExecutor] AbstractTxLogger.java:70 - business code error @group(9ca31a629a537)
2020-06-02 03:29:38,169 [http-nio-8085-exec-1] ERROR [com.sqq.order.controller.OrderController] OrderController.java:29 - 新建订单出错
java.lang.Exception: 测试事务
	at com.sqq.order.service.impl.OrderServiceImpl.saveOrder(OrderServiceImpl.java:44)
	at com.sqq.order.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$eabb1954.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.codingapi.txlcn.tc.core.DTXLocalControl.doBusinessCode(DTXLocalControl.java:44)
	at com.codingapi.txlcn.tc.core.DTXServiceExecutor.transactionRunning(DTXServiceExecutor.java:91)
	at com.codingapi.txlcn.tc.aspect.weave.DTXLogicWeaver.runTransaction(DTXLogicWeaver.java:96)
	at com.codingapi.txlcn.tc.aspect.TransactionAspect.runWithLcnTransaction(TransactionAspect.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.sqq.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$f8c37136.saveOrder(<generated>)
	at com.sqq.order.controller.OrderController.newOrder(OrderController.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-06-02 03:29:38,835 [PollingServerListUpdater-0] INFO  [com.netflix.config.ChainedDynamicProperty] ChainedDynamicProperty.java:115 - Flipping property: sqq-user.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-06-02 03:29:42,064 [http-nio-8085-exec-2] INFO  [com.sqq.order.service.impl.OrderServiceImpl] OrderServiceImpl.java:32 - 使用fegin调用用户服务的修改积分服务NewOrder(userId=1, price=30.0)
2020-06-02 03:29:42,097 [http-nio-8085-exec-2] INFO  [com.sqq.order.service.impl.OrderServiceImpl] OrderServiceImpl.java:37 - 新增订单NewOrder(userId=1, price=30.0)
2020-06-02 03:29:42,098 [http-nio-8085-exec-2] ERROR [com.codingapi.txlcn.tc.core.DTXServiceExecutor] AbstractTxLogger.java:70 - business code error @group(9ca31b1fca537)
2020-06-02 03:29:42,153 [http-nio-8085-exec-2] ERROR [com.sqq.order.controller.OrderController] OrderController.java:29 - 新建订单出错
java.lang.Exception: 测试事务
	at com.sqq.order.service.impl.OrderServiceImpl.saveOrder(OrderServiceImpl.java:44)
	at com.sqq.order.service.impl.OrderServiceImpl$$FastClassBySpringCGLIB$$eabb1954.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.codingapi.txlcn.tc.core.DTXLocalControl.doBusinessCode(DTXLocalControl.java:44)
	at com.codingapi.txlcn.tc.core.DTXServiceExecutor.transactionRunning(DTXServiceExecutor.java:91)
	at com.codingapi.txlcn.tc.aspect.weave.DTXLogicWeaver.runTransaction(DTXLogicWeaver.java:96)
	at com.codingapi.txlcn.tc.aspect.TransactionAspect.runWithLcnTransaction(TransactionAspect.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.sqq.order.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$f8c37136.saveOrder(<generated>)
	at com.sqq.order.controller.OrderController.newOrder(OrderController.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-06-02 03:30:58,575 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 03:31:54,428 [nioEventLoopGroup-2-1] ERROR [c.c.t.txmsg.netty.handler.NettyClientRetryHandler] NettyClientRetryHandler.java:85 - NettyClientRetryHandler - exception . 
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:347)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:628)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:563)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:480)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:442)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-06-02 03:31:54,432 [nioEventLoopGroup-2-1] ERROR [c.c.t.txmsg.netty.handler.NettyClientRetryHandler] NettyClientRetryHandler.java:75 - keepSize:1,nowSize:0
2020-06-02 03:31:54,432 [nioEventLoopGroup-2-1] ERROR [c.c.t.txmsg.netty.handler.NettyClientRetryHandler] NettyClientRetryHandler.java:78 - socketAddress:/127.0.0.1:8070 
2020-06-02 03:31:54,432 [nioEventLoopGroup-2-1] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 1
2020-06-02 03:31:56,438 [nioEventLoopGroup-2-1] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 22:49:17,790 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@74751b3: startup date [Tue Jun 02 22:49:17 CST 2020]; root of context hierarchy
2020-06-02 22:49:18,009 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 22:49:18,032 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$46b54007] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 22:49:18,311 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 22:49:18,359 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-02 22:49:18,653 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-02 22:49:18,653 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-02 22:49:18,743 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-02 22:49:18,743 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-02 22:49:18,905 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 22:49:19,022 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-02 22:49:19,022 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-02 22:49:19,022 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-02 22:49:19,023 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-02 22:49:19,023 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-02 22:49:19,023 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-02 22:49:19,023 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-02 22:49:19,148 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-02 22:49:19,150 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1311 - Not registering with Eureka server per configuration
2020-06-02 22:49:19,154 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591109359153 with initial instances count: 2
2020-06-02 22:49:19,426 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:205 - Fetching config from server at : http://192.168.1.3:4001/
2020-06-02 22:49:19,740 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:149 - Located environment: name=sqq-order, profiles=[dev], label=null, version=null, state=null
2020-06-02 22:49:19,740 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:98 - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='classpath:/resposity/sqq-order-dev.yml'}]}
2020-06-02 22:49:19,742 [main] INFO  [com.sqq.order.SqqOrderApplication] SpringApplication.java:658 - The following profiles are active: dev
2020-06-02 22:49:19,763 [main] INFO  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53ac845a: startup date [Tue Jun 02 22:49:19 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@74751b3
2020-06-02 22:49:21,014 [main] INFO  [o.s.b.factory.support.DefaultListableBeanFactory] DefaultListableBeanFactory.java:821 - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-06-02 22:49:21,160 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:294 - BeanFactory id=60453ea5-0a69-3a6f-84a1-bf1c7fcd27ae
2020-06-02 22:49:21,174 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 22:49:21,288 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2a9b3d0a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 22:49:21,362 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$46b54007] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 22:49:21,874 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:91 - Tomcat initialized with port(s): 8085 (http)
2020-06-02 22:49:21,887 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Initializing ProtocolHandler ["http-nio-8085"]
2020-06-02 22:49:21,898 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:180 - Starting service [Tomcat]
2020-06-02 22:49:21,898 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:180 - Starting Servlet Engine: Apache Tomcat/8.5.34
2020-06-02 22:49:21,902 [localhost-startStop-1] INFO  [org.apache.catalina.core.AprLifecycleListener] DirectJDKLog.java:180 - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\IDM Computer Solutions\UltraEdit;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\WIN10\AppData\Local\Microsoft\WindowsApps;D:\Program Files (x86)\Microsoft VS Code Insiders\bin;D:\apache-maven-3.6.1\bin;C:\Users\WIN10\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;d:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\bin;.]
2020-06-02 22:49:22,139 [localhost-startStop-1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:180 - Initializing Spring embedded WebApplicationContext
2020-06-02 22:49:22,139 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 2377 ms
2020-06-02 22:49:22,385 [localhost-startStop-1] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-02 22:49:22,386 [localhost-startStop-1] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 22:49:22,392 [localhost-startStop-1] INFO  [com.netflix.config.DynamicPropertyFactory] DynamicPropertyFactory.java:281 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5e452271
2020-06-02 22:49:24,409 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-06-02 22:49:24,413 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-06-02 22:49:24,414 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-06-02 22:49:24,414 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-06-02 22:49:24,414 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'requestContextFilter' to: [/*]
2020-06-02 22:49:24,414 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpTraceFilter' to: [/*]
2020-06-02 22:49:24,414 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.ServletRegistrationBean] ServletRegistrationBean.java:187 - Servlet dispatcherServlet mapped to [/]
2020-06-02 22:49:24,997 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing FeignContext-sqq-user: startup date [Tue Jun 02 22:49:24 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53ac845a
2020-06-02 22:49:25,030 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 22:49:25,402 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:80 - HikariPool-1 - Starting...
2020-06-02 22:49:25,588 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:82 - HikariPool-1 - Start completed.
2020-06-02 22:49:25,588 [main] INFO  [com.codingapi.txlcn.tc.corelog.H2DbHelper] H2DbHelper.java:52 - Init H2 DATABASE at D:\spring-cloud-demo-worker\sqq-spring-cloud\.txlcn\sqq-order-8085
2020-06-02 22:49:26,084 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-02 22:49:26,084 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 22:49:26,184 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 22:49:26,436 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerAdapter] RequestMappingHandlerAdapter.java:588 - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53ac845a: startup date [Tue Jun 02 22:49:19 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@74751b3
2020-06-02 22:49:26,511 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/newOrder],methods=[POST]}" onto public void com.sqq.order.controller.OrderController.newOrder(com.sqq.order.vo.NewOrder)
2020-06-02 22:49:26,512 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/getOrderById/{orderId}],methods=[GET]}" onto public void com.sqq.order.controller.OrderController.getOrderById(java.lang.Integer)
2020-06-02 22:49:26,516 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-06-02 22:49:26,517 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-02 22:49:26,580 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 22:49:26,581 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 22:49:27,670 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:888 - Shutting down DiscoveryClient ...
2020-06-02 22:49:27,676 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:911 - Completed shut down of DiscoveryClient
2020-06-02 22:49:27,696 [main] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:59 - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-06-02 22:49:27,709 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-02 22:49:27,710 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-02 22:49:27,711 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-02 22:49:27,786 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:433 - Registering beans for JMX exposure on startup
2020-06-02 22:49:27,788 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'logDbProperties' has been autodetected for JMX exposure
2020-06-02 22:49:27,788 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-06-02 22:49:27,799 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-06-02 22:49:27,801 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-06-02 22:49:27,802 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-06-02 22:49:27,805 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-06-02 22:49:27,820 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-06-02 22:49:27,836 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'logDbProperties': registering with JMX server as MBean [com.codingapi.txlcn.logger.db:name=logDbProperties,type=LogDbProperties]
2020-06-02 22:49:27,839 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=53ac845a,type=ConfigurationPropertiesRebinder]
2020-06-02 22:49:27,856 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-06-02 22:49:27,878 [main] INFO  [o.s.context.support.DefaultLifecycleProcessor] DefaultLifecycleProcessor.java:356 - Starting beans in phase 0
2020-06-02 22:49:27,893 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 22:49:27,897 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-02 22:49:27,901 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-02 22:49:27,901 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-02 22:49:27,901 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-02 22:49:27,902 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-02 22:49:27,992 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 22:49:27,996 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-02 22:49:27,997 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-02 22:49:27,997 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-02 22:49:27,997 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-02 22:49:27,997 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-02 22:49:27,997 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-02 22:49:27,997 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-02 22:49:28,003 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-02 22:49:28,004 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1264 - Starting heartbeat executor: renew interval is: 5
2020-06-02 22:49:28,005 [main] INFO  [com.netflix.discovery.InstanceInfoReplicator] InstanceInfoReplicator.java:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-06-02 22:49:28,008 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591109368008 with initial instances count: 2
2020-06-02 22:49:28,015 [main] INFO  [o.s.c.n.e.serviceregistry.EurekaServiceRegistry] EurekaServiceRegistry.java:42 - Registering application SQQ-ORDER with eureka with status UP
2020-06-02 22:49:28,016 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1299 - Saw local status change event StatusChangeEvent [timestamp=1591109368016, current=UP, previous=STARTING]
2020-06-02 22:49:28,018 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:826 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085: registering service...
2020-06-02 22:49:28,040 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Starting ProtocolHandler ["http-nio-8085"]
2020-06-02 22:49:28,055 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:835 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085 - registration status: 204
2020-06-02 22:49:28,066 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] DirectJDKLog.java:180 - Using a shared selector for servlet write/read
2020-06-02 22:49:28,168 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:206 - Tomcat started on port(s): 8085 (http) with context path ''
2020-06-02 22:49:28,169 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration] EurekaAutoServiceRegistration.java:124 - Updating port to 8085
2020-06-02 22:49:28,172 [main] INFO  [com.sqq.order.SqqOrderApplication] StartupInfoLogger.java:59 - Started SqqOrderApplication in 11.3 seconds (JVM running for 12.182)
2020-06-02 22:49:28,262 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 1
2020-06-02 22:49:31,610 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 22:49:37,614 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 2
2020-06-02 22:49:37,620 [Thread-53] INFO  [com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack] TCSideRpcInitCallBack.java:77 - Send init message to TM[/127.0.0.1:8070]
2020-06-02 22:49:37,637 [main] INFO  [com.codingapi.txlcn.tc.corelog.txc.TxcLogHelper] TxcLogHelper.java:59 - Txc log table finish (H2 DATABASE)
2020-06-02 22:49:37,638 [main] INFO  [c.c.txlcn.tc.corelog.aspect.AspectLogHelper] AspectLogHelper.java:62 - Aspect log table finished (H2 DATABASE)
2020-06-02 22:49:37,818 [Thread-53] INFO  [com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack] TCSideRpcInitCallBack.java:92 - Finally, determined dtx time is 30000ms, tm rpc timeout is 1000 ms, machineId is 13
2020-06-02 22:49:37,819 [Thread-53] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:72 - Searching for more TM...
2020-06-02 22:49:37,854 [Thread-53] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:106 - TC[sqq-order:8085] established TM cluster successfully!
2020-06-02 22:49:37,855 [Thread-53] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:111 - TM cluster's size: 1
2020-06-02 22:49:37,892 [RMI TCP Connection(12)-127.0.0.1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:180 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-06-02 22:49:37,893 [RMI TCP Connection(12)-127.0.0.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:494 - FrameworkServlet 'dispatcherServlet': initialization started
2020-06-02 22:49:37,895 [RMI TCP Connection(14)-127.0.0.1] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:110 - HikariPool-2 - Starting...
2020-06-02 22:49:37,913 [RMI TCP Connection(12)-127.0.0.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:509 - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2020-06-02 22:49:38,087 [RMI TCP Connection(14)-127.0.0.1] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:123 - HikariPool-2 - Start completed.
2020-06-02 22:49:38,107 [RMI TCP Connection(14)-127.0.0.1] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:205 - Fetching config from server at : http://192.168.1.3:4001/
2020-06-02 22:49:38,331 [RMI TCP Connection(14)-127.0.0.1] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:149 - Located environment: name=sqq-order, profiles=[dev], label=null, version=null, state=null
2020-06-02 23:11:49,373 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@fa49800: startup date [Tue Jun 02 23:11:49 CST 2020]; root of context hierarchy
2020-06-02 23:11:49,578 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 23:11:49,607 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$14675929] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 23:11:49,918 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 23:11:49,964 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-02 23:11:50,276 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-02 23:11:50,277 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-02 23:11:50,363 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-02 23:11:50,363 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-02 23:11:50,573 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 23:11:50,706 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-02 23:11:50,707 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-02 23:11:50,707 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-02 23:11:50,707 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-02 23:11:50,707 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-02 23:11:50,707 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-02 23:11:50,708 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-02 23:11:50,883 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-02 23:11:50,886 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1311 - Not registering with Eureka server per configuration
2020-06-02 23:11:50,890 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591110710889 with initial instances count: 1
2020-06-02 23:11:51,194 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:205 - Fetching config from server at : http://192.168.1.3:4001/
2020-06-02 23:11:51,520 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:149 - Located environment: name=sqq-order, profiles=[dev], label=null, version=null, state=null
2020-06-02 23:11:51,520 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:98 - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='classpath:/resposity/sqq-order-dev.yml'}]}
2020-06-02 23:11:51,523 [main] INFO  [com.sqq.order.SqqOrderApplication] SpringApplication.java:658 - The following profiles are active: dev
2020-06-02 23:11:51,538 [main] INFO  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@191a709b: startup date [Tue Jun 02 23:11:51 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@fa49800
2020-06-02 23:11:52,651 [main] INFO  [o.s.b.factory.support.DefaultListableBeanFactory] DefaultListableBeanFactory.java:821 - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-06-02 23:11:52,823 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:294 - BeanFactory id=60453ea5-0a69-3a6f-84a1-bf1c7fcd27ae
2020-06-02 23:11:52,838 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 23:11:52,940 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f84d562c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 23:11:53,022 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$14675929] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 23:11:53,363 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:91 - Tomcat initialized with port(s): 8085 (http)
2020-06-02 23:11:53,374 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Initializing ProtocolHandler ["http-nio-8085"]
2020-06-02 23:11:53,382 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:180 - Starting service [Tomcat]
2020-06-02 23:11:53,382 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:180 - Starting Servlet Engine: Apache Tomcat/8.5.34
2020-06-02 23:11:53,385 [localhost-startStop-1] INFO  [org.apache.catalina.core.AprLifecycleListener] DirectJDKLog.java:180 - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\IDM Computer Solutions\UltraEdit;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\WIN10\AppData\Local\Microsoft\WindowsApps;D:\Program Files (x86)\Microsoft VS Code Insiders\bin;D:\apache-maven-3.6.1\bin;C:\Users\WIN10\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;d:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\bin;.]
2020-06-02 23:11:53,534 [localhost-startStop-1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:180 - Initializing Spring embedded WebApplicationContext
2020-06-02 23:11:53,534 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 1996 ms
2020-06-02 23:11:53,749 [localhost-startStop-1] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-02 23:11:53,750 [localhost-startStop-1] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 23:11:53,757 [localhost-startStop-1] INFO  [com.netflix.config.DynamicPropertyFactory] DynamicPropertyFactory.java:281 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@d5d9352
2020-06-02 23:11:55,151 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-06-02 23:11:55,151 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-06-02 23:11:55,152 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-06-02 23:11:55,152 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-06-02 23:11:55,152 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'requestContextFilter' to: [/*]
2020-06-02 23:11:55,152 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpTraceFilter' to: [/*]
2020-06-02 23:11:55,152 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.ServletRegistrationBean] ServletRegistrationBean.java:187 - Servlet dispatcherServlet mapped to [/]
2020-06-02 23:11:55,360 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing FeignContext-sqq-user: startup date [Tue Jun 02 23:11:55 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@191a709b
2020-06-02 23:11:55,373 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 23:11:55,577 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:80 - HikariPool-1 - Starting...
2020-06-02 23:11:55,668 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:82 - HikariPool-1 - Start completed.
2020-06-02 23:11:55,669 [main] INFO  [com.codingapi.txlcn.tc.corelog.H2DbHelper] H2DbHelper.java:52 - Init H2 DATABASE at D:\spring-cloud-demo-worker\sqq-spring-cloud\.txlcn\sqq-order-8085
2020-06-02 23:11:55,940 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-02 23:11:55,940 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 23:11:56,015 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 23:11:56,180 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerAdapter] RequestMappingHandlerAdapter.java:588 - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@191a709b: startup date [Tue Jun 02 23:11:51 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@fa49800
2020-06-02 23:11:56,226 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/getOrderById/{orderId}],methods=[GET]}" onto public void com.sqq.order.controller.OrderController.getOrderById(java.lang.Integer)
2020-06-02 23:11:56,227 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/newOrder],methods=[POST]}" onto public void com.sqq.order.controller.OrderController.newOrder(com.sqq.order.vo.NewOrder)
2020-06-02 23:11:56,229 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-06-02 23:11:56,230 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-02 23:11:56,265 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 23:11:56,265 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 23:11:56,987 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:888 - Shutting down DiscoveryClient ...
2020-06-02 23:11:56,992 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:911 - Completed shut down of DiscoveryClient
2020-06-02 23:11:57,006 [main] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:59 - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-06-02 23:11:57,016 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-02 23:11:57,016 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-02 23:11:57,017 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-02 23:11:57,064 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:433 - Registering beans for JMX exposure on startup
2020-06-02 23:11:57,065 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'logDbProperties' has been autodetected for JMX exposure
2020-06-02 23:11:57,065 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-06-02 23:11:57,073 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-06-02 23:11:57,074 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-06-02 23:11:57,075 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-06-02 23:11:57,078 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-06-02 23:11:57,086 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-06-02 23:11:57,094 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'logDbProperties': registering with JMX server as MBean [com.codingapi.txlcn.logger.db:name=logDbProperties,type=LogDbProperties]
2020-06-02 23:11:57,096 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=191a709b,type=ConfigurationPropertiesRebinder]
2020-06-02 23:11:57,102 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-06-02 23:11:57,118 [main] INFO  [o.s.context.support.DefaultLifecycleProcessor] DefaultLifecycleProcessor.java:356 - Starting beans in phase 0
2020-06-02 23:11:57,126 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 23:11:57,129 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-02 23:11:57,131 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-02 23:11:57,131 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-02 23:11:57,131 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-02 23:11:57,132 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-02 23:11:57,179 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 23:11:57,180 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-02 23:11:57,180 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-02 23:11:57,180 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-02 23:11:57,180 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-02 23:11:57,180 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-02 23:11:57,180 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-02 23:11:57,180 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-02 23:11:57,185 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-02 23:11:57,186 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1264 - Starting heartbeat executor: renew interval is: 5
2020-06-02 23:11:57,187 [main] INFO  [com.netflix.discovery.InstanceInfoReplicator] InstanceInfoReplicator.java:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-06-02 23:11:57,188 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591110717188 with initial instances count: 1
2020-06-02 23:11:57,195 [main] INFO  [o.s.c.n.e.serviceregistry.EurekaServiceRegistry] EurekaServiceRegistry.java:42 - Registering application SQQ-ORDER with eureka with status UP
2020-06-02 23:11:57,195 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1299 - Saw local status change event StatusChangeEvent [timestamp=1591110717195, current=UP, previous=STARTING]
2020-06-02 23:11:57,196 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:826 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085: registering service...
2020-06-02 23:11:57,207 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Starting ProtocolHandler ["http-nio-8085"]
2020-06-02 23:11:57,219 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] DirectJDKLog.java:180 - Using a shared selector for servlet write/read
2020-06-02 23:11:57,223 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:835 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085 - registration status: 204
2020-06-02 23:11:57,232 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:206 - Tomcat started on port(s): 8085 (http) with context path ''
2020-06-02 23:11:57,232 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration] EurekaAutoServiceRegistration.java:124 - Updating port to 8085
2020-06-02 23:11:57,234 [main] INFO  [com.sqq.order.SqqOrderApplication] StartupInfoLogger.java:59 - Started SqqOrderApplication in 8.685 seconds (JVM running for 9.776)
2020-06-02 23:11:57,272 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 1
2020-06-02 23:11:59,554 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:12:05,555 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 2
2020-06-02 23:12:07,558 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:12:13,559 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 3
2020-06-02 23:12:15,564 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:12:21,564 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 4
2020-06-02 23:12:23,567 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:12:29,568 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 5
2020-06-02 23:12:31,583 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:12:37,583 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 6
2020-06-02 23:12:39,587 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:12:45,587 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 7
2020-06-02 23:12:47,592 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:12:53,593 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 8
2020-06-02 23:12:55,597 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:13:01,598 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:124 - Finally, netty connection fail , socket is /127.0.0.1:8070
2020-06-02 23:13:01,603 [main] ERROR [com.codingapi.txlcn.tc.txmsg.AutoTMClusterEngine] AutoTMClusterEngine.java:67 - request fail. non tx-manager is alive. on reportInvalidTM.
2020-06-02 23:13:01,614 [main] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:72 - Searching for more TM...
2020-06-02 23:13:01,617 [main] INFO  [o.s.b.a.l.ConditionEvaluationReportLoggingListener] ConditionEvaluationReportLoggingListener.java:142 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-06-02 23:13:01,623 [main] ERROR [org.springframework.boot.SpringApplication] SpringApplication.java:837 - Application run failed
java.lang.IllegalStateException: Failed to execute ApplicationRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:786)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:773)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1242)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1230)
	at com.sqq.order.SqqOrderApplication.main(SqqOrderApplication.java:22)
Caused by: java.lang.IllegalStateException: There is no normal TM.
	at com.codingapi.txlcn.tc.txmsg.TMSearcher.search(TMSearcher.java:86)
	at com.codingapi.txlcn.tc.txmsg.AutoTMClusterEngine.prepareToResearchTMCluster(AutoTMClusterEngine.java:83)
	at com.codingapi.txlcn.tc.txmsg.AutoTMClusterEngine.onConnectFail(AutoTMClusterEngine.java:69)
	at com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack.lambda$connectFail$3(TCSideRpcInitCallBack.java:107)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack.connectFail(TCSideRpcInitCallBack.java:107)
	at com.codingapi.txlcn.txmsg.netty.impl.NettyRpcClientInitializer.connect(NettyRpcClientInitializer.java:125)
	at com.codingapi.txlcn.txmsg.netty.impl.NettyRpcClientInitializer.init(NettyRpcClientInitializer.java:85)
	at com.codingapi.txlcn.tc.txmsg.TCRpcServer.init(TCRpcServer.java:58)
	at com.codingapi.txlcn.common.runner.TxLcnApplicationRunner.run(TxLcnApplicationRunner.java:54)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:783)
	... 5 common frames omitted
2020-06-02 23:13:01,623 [main] INFO  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:991 - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@191a709b: startup date [Tue Jun 02 23:11:51 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@fa49800
2020-06-02 23:13:01,624 [main] INFO  [o.s.c.n.e.serviceregistry.EurekaServiceRegistry] EurekaServiceRegistry.java:65 - Unregistering application SQQ-ORDER with eureka with status DOWN
2020-06-02 23:13:01,624 [main] WARN  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1297 - Saw local status change event StatusChangeEvent [timestamp=1591110781624, current=DOWN, previous=UP]
2020-06-02 23:13:01,624 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:826 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085: registering service...
2020-06-02 23:13:01,625 [main] INFO  [o.s.context.support.DefaultLifecycleProcessor] DefaultLifecycleProcessor.java:369 - Stopping beans in phase 0
2020-06-02 23:13:01,626 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:451 - Unregistering JMX-exposed beans on shutdown
2020-06-02 23:13:01,626 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanRegistrationSupport.java:185 - Unregistering JMX-exposed beans
2020-06-02 23:13:01,628 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcServerInitializer] NettyRpcServerInitializer.java:102 - server was down.
2020-06-02 23:13:01,630 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:132 - RPC client was down.
2020-06-02 23:13:01,631 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:381 - HikariPool-1 - Shutdown initiated...
2020-06-02 23:13:01,632 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:835 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085 - registration status: 204
2020-06-02 23:13:01,637 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:383 - HikariPool-1 - Shutdown completed.
2020-06-02 23:13:01,637 [main] INFO  [com.codingapi.txlcn.tc.corelog.H2DbHelper] H2DbHelper.java:90 - log hikariDataSource close.
2020-06-02 23:13:01,641 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:991 - Closing FeignContext-sqq-user: startup date [Tue Jun 02 23:11:55 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@191a709b
2020-06-02 23:13:01,643 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:888 - Shutting down DiscoveryClient ...
2020-06-02 23:13:01,645 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 23:13:04,646 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:922 - Unregistering ...
2020-06-02 23:13:04,651 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:924 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085 - deregister  status: 200
2020-06-02 23:13:04,655 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:911 - Completed shut down of DiscoveryClient
2020-06-02 23:18:32,872 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@56cdfb3b: startup date [Tue Jun 02 23:18:32 CST 2020]; root of context hierarchy
2020-06-02 23:18:33,194 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 23:18:33,228 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fd890f3c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 23:18:33,498 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 23:18:33,544 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-02 23:18:33,833 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-02 23:18:33,833 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-02 23:18:33,911 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-02 23:18:33,912 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-02 23:18:34,123 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 23:18:34,239 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-02 23:18:34,239 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-02 23:18:34,239 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-02 23:18:34,239 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-02 23:18:34,239 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-02 23:18:34,240 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-02 23:18:34,240 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-02 23:18:34,407 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-02 23:18:34,411 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1311 - Not registering with Eureka server per configuration
2020-06-02 23:18:34,414 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591111114413 with initial instances count: 3
2020-06-02 23:18:34,732 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:205 - Fetching config from server at : http://192.168.1.3:4001/
2020-06-02 23:18:34,999 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:149 - Located environment: name=sqq-order, profiles=[dev], label=null, version=null, state=null
2020-06-02 23:18:34,999 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:98 - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='classpath:/resposity/sqq-order-dev.yml'}]}
2020-06-02 23:18:35,002 [main] INFO  [com.sqq.order.SqqOrderApplication] SpringApplication.java:658 - The following profiles are active: dev
2020-06-02 23:18:35,013 [main] INFO  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@776802b0: startup date [Tue Jun 02 23:18:35 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@56cdfb3b
2020-06-02 23:18:35,841 [main] INFO  [o.s.b.factory.support.DefaultListableBeanFactory] DefaultListableBeanFactory.java:821 - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-06-02 23:18:35,952 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:294 - BeanFactory id=60453ea5-0a69-3a6f-84a1-bf1c7fcd27ae
2020-06-02 23:18:35,966 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 23:18:36,060 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e16f0c3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 23:18:36,136 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fd890f3c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 23:18:36,449 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:91 - Tomcat initialized with port(s): 8085 (http)
2020-06-02 23:18:36,458 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Initializing ProtocolHandler ["http-nio-8085"]
2020-06-02 23:18:36,466 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:180 - Starting service [Tomcat]
2020-06-02 23:18:36,466 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:180 - Starting Servlet Engine: Apache Tomcat/8.5.34
2020-06-02 23:18:36,470 [localhost-startStop-1] INFO  [org.apache.catalina.core.AprLifecycleListener] DirectJDKLog.java:180 - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\IDM Computer Solutions\UltraEdit;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\WIN10\AppData\Local\Microsoft\WindowsApps;D:\Program Files (x86)\Microsoft VS Code Insiders\bin;D:\apache-maven-3.6.1\bin;C:\Users\WIN10\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;d:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\bin;.]
2020-06-02 23:18:36,635 [localhost-startStop-1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:180 - Initializing Spring embedded WebApplicationContext
2020-06-02 23:18:36,636 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 1622 ms
2020-06-02 23:18:36,845 [localhost-startStop-1] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-02 23:18:36,846 [localhost-startStop-1] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 23:18:36,854 [localhost-startStop-1] INFO  [com.netflix.config.DynamicPropertyFactory] DynamicPropertyFactory.java:281 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2cc1641c
2020-06-02 23:18:38,196 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-06-02 23:18:38,198 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-06-02 23:18:38,198 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-06-02 23:18:38,199 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-06-02 23:18:38,199 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'requestContextFilter' to: [/*]
2020-06-02 23:18:38,199 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpTraceFilter' to: [/*]
2020-06-02 23:18:38,199 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.ServletRegistrationBean] ServletRegistrationBean.java:187 - Servlet dispatcherServlet mapped to [/]
2020-06-02 23:18:38,422 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing FeignContext-sqq-user: startup date [Tue Jun 02 23:18:38 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@776802b0
2020-06-02 23:18:38,435 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 23:18:38,624 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:80 - HikariPool-1 - Starting...
2020-06-02 23:18:38,711 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:82 - HikariPool-1 - Start completed.
2020-06-02 23:18:38,712 [main] INFO  [com.codingapi.txlcn.tc.corelog.H2DbHelper] H2DbHelper.java:52 - Init H2 DATABASE at D:\spring-cloud-demo-worker\sqq-spring-cloud\.txlcn\sqq-order-8085
2020-06-02 23:18:38,981 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-02 23:18:38,981 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 23:18:39,056 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 23:18:39,226 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerAdapter] RequestMappingHandlerAdapter.java:588 - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@776802b0: startup date [Tue Jun 02 23:18:35 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@56cdfb3b
2020-06-02 23:18:39,282 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/getOrderById/{orderId}],methods=[GET]}" onto public void com.sqq.order.controller.OrderController.getOrderById(java.lang.Integer)
2020-06-02 23:18:39,284 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/newOrder],methods=[POST]}" onto public void com.sqq.order.controller.OrderController.newOrder(com.sqq.order.vo.NewOrder)
2020-06-02 23:18:39,286 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-06-02 23:18:39,287 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-02 23:18:39,346 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 23:18:39,346 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 23:18:40,041 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:888 - Shutting down DiscoveryClient ...
2020-06-02 23:18:40,046 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:911 - Completed shut down of DiscoveryClient
2020-06-02 23:18:40,060 [main] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:59 - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-06-02 23:18:40,070 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-02 23:18:40,071 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-02 23:18:40,071 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-02 23:18:40,119 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:433 - Registering beans for JMX exposure on startup
2020-06-02 23:18:40,120 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'logDbProperties' has been autodetected for JMX exposure
2020-06-02 23:18:40,120 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-06-02 23:18:40,127 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-06-02 23:18:40,129 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-06-02 23:18:40,131 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-06-02 23:18:40,134 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-06-02 23:18:40,140 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-06-02 23:18:40,147 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'logDbProperties': registering with JMX server as MBean [com.codingapi.txlcn.logger.db:name=logDbProperties,type=LogDbProperties]
2020-06-02 23:18:40,150 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=776802b0,type=ConfigurationPropertiesRebinder]
2020-06-02 23:18:40,155 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-06-02 23:18:40,169 [main] INFO  [o.s.context.support.DefaultLifecycleProcessor] DefaultLifecycleProcessor.java:356 - Starting beans in phase 0
2020-06-02 23:18:40,176 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 23:18:40,179 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-02 23:18:40,182 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-02 23:18:40,183 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-02 23:18:40,183 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-02 23:18:40,183 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-02 23:18:40,231 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 23:18:40,232 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-02 23:18:40,233 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-02 23:18:40,233 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-02 23:18:40,233 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-02 23:18:40,233 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-02 23:18:40,233 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-02 23:18:40,233 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-02 23:18:40,237 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-02 23:18:40,238 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1264 - Starting heartbeat executor: renew interval is: 5
2020-06-02 23:18:40,239 [main] INFO  [com.netflix.discovery.InstanceInfoReplicator] InstanceInfoReplicator.java:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-06-02 23:18:40,240 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591111120240 with initial instances count: 3
2020-06-02 23:18:40,246 [main] INFO  [o.s.c.n.e.serviceregistry.EurekaServiceRegistry] EurekaServiceRegistry.java:42 - Registering application SQQ-ORDER with eureka with status UP
2020-06-02 23:18:40,247 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1299 - Saw local status change event StatusChangeEvent [timestamp=1591111120247, current=UP, previous=STARTING]
2020-06-02 23:18:40,249 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:826 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085: registering service...
2020-06-02 23:18:40,260 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Starting ProtocolHandler ["http-nio-8085"]
2020-06-02 23:18:40,271 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] DirectJDKLog.java:180 - Using a shared selector for servlet write/read
2020-06-02 23:18:40,274 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:835 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085 - registration status: 204
2020-06-02 23:18:40,282 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:206 - Tomcat started on port(s): 8085 (http) with context path ''
2020-06-02 23:18:40,284 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration] EurekaAutoServiceRegistration.java:124 - Updating port to 8085
2020-06-02 23:18:40,287 [main] INFO  [com.sqq.order.SqqOrderApplication] StartupInfoLogger.java:59 - Started SqqOrderApplication in 8.523 seconds (JVM running for 10.178)
2020-06-02 23:18:40,325 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 1
2020-06-02 23:18:42,596 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:18:48,596 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 2
2020-06-02 23:18:50,611 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:18:56,611 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 3
2020-06-02 23:18:58,616 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:19:04,616 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 4
2020-06-02 23:19:06,620 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:19:12,621 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 5
2020-06-02 23:19:14,626 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:19:20,627 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 6
2020-06-02 23:19:22,632 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:19:28,633 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 7
2020-06-02 23:19:30,638 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:19:36,638 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 8
2020-06-02 23:19:38,652 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:19:44,652 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:124 - Finally, netty connection fail , socket is /127.0.0.1:8070
2020-06-02 23:19:44,656 [main] ERROR [com.codingapi.txlcn.tc.txmsg.AutoTMClusterEngine] AutoTMClusterEngine.java:67 - request fail. non tx-manager is alive. on reportInvalidTM.
2020-06-02 23:19:44,656 [main] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:72 - Searching for more TM...
2020-06-02 23:19:44,658 [main] INFO  [o.s.b.a.l.ConditionEvaluationReportLoggingListener] ConditionEvaluationReportLoggingListener.java:142 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-06-02 23:19:44,665 [main] ERROR [org.springframework.boot.SpringApplication] SpringApplication.java:837 - Application run failed
java.lang.IllegalStateException: Failed to execute ApplicationRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:786)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:773)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1242)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1230)
	at com.sqq.order.SqqOrderApplication.main(SqqOrderApplication.java:22)
Caused by: java.lang.IllegalStateException: There is no normal TM.
	at com.codingapi.txlcn.tc.txmsg.TMSearcher.search(TMSearcher.java:86)
	at com.codingapi.txlcn.tc.txmsg.AutoTMClusterEngine.prepareToResearchTMCluster(AutoTMClusterEngine.java:83)
	at com.codingapi.txlcn.tc.txmsg.AutoTMClusterEngine.onConnectFail(AutoTMClusterEngine.java:69)
	at com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack.lambda$connectFail$3(TCSideRpcInitCallBack.java:107)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack.connectFail(TCSideRpcInitCallBack.java:107)
	at com.codingapi.txlcn.txmsg.netty.impl.NettyRpcClientInitializer.connect(NettyRpcClientInitializer.java:125)
	at com.codingapi.txlcn.txmsg.netty.impl.NettyRpcClientInitializer.init(NettyRpcClientInitializer.java:85)
	at com.codingapi.txlcn.tc.txmsg.TCRpcServer.init(TCRpcServer.java:58)
	at com.codingapi.txlcn.common.runner.TxLcnApplicationRunner.run(TxLcnApplicationRunner.java:54)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:783)
	... 5 common frames omitted
2020-06-02 23:19:44,666 [main] INFO  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:991 - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@776802b0: startup date [Tue Jun 02 23:18:35 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@56cdfb3b
2020-06-02 23:19:44,666 [main] INFO  [o.s.c.n.e.serviceregistry.EurekaServiceRegistry] EurekaServiceRegistry.java:65 - Unregistering application SQQ-ORDER with eureka with status DOWN
2020-06-02 23:19:44,666 [main] WARN  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1297 - Saw local status change event StatusChangeEvent [timestamp=1591111184666, current=DOWN, previous=UP]
2020-06-02 23:19:44,667 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:826 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085: registering service...
2020-06-02 23:19:44,668 [main] INFO  [o.s.context.support.DefaultLifecycleProcessor] DefaultLifecycleProcessor.java:369 - Stopping beans in phase 0
2020-06-02 23:19:44,669 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:451 - Unregistering JMX-exposed beans on shutdown
2020-06-02 23:19:44,669 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanRegistrationSupport.java:185 - Unregistering JMX-exposed beans
2020-06-02 23:19:44,670 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcServerInitializer] NettyRpcServerInitializer.java:102 - server was down.
2020-06-02 23:19:44,672 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:132 - RPC client was down.
2020-06-02 23:19:44,673 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:835 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085 - registration status: 204
2020-06-02 23:19:44,674 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:381 - HikariPool-1 - Shutdown initiated...
2020-06-02 23:19:44,678 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:383 - HikariPool-1 - Shutdown completed.
2020-06-02 23:19:44,678 [main] INFO  [com.codingapi.txlcn.tc.corelog.H2DbHelper] H2DbHelper.java:90 - log hikariDataSource close.
2020-06-02 23:19:44,679 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:991 - Closing FeignContext-sqq-user: startup date [Tue Jun 02 23:18:38 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@776802b0
2020-06-02 23:19:44,680 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:888 - Shutting down DiscoveryClient ...
2020-06-02 23:19:44,682 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 23:19:47,683 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:922 - Unregistering ...
2020-06-02 23:19:47,687 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:924 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085 - deregister  status: 200
2020-06-02 23:19:47,690 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:911 - Completed shut down of DiscoveryClient
2020-06-02 23:21:04,750 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@37d4349f: startup date [Tue Jun 02 23:21:04 CST 2020]; root of context hierarchy
2020-06-02 23:21:04,926 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 23:21:04,947 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6b8cdff9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 23:21:05,202 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 23:21:05,248 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-02 23:21:05,522 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-02 23:21:05,522 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-02 23:21:05,607 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-02 23:21:05,607 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-02 23:21:05,765 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 23:21:05,879 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-02 23:21:05,879 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-02 23:21:05,879 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-02 23:21:05,879 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-02 23:21:05,880 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-02 23:21:05,880 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-02 23:21:05,880 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-02 23:21:05,988 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-02 23:21:05,990 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1311 - Not registering with Eureka server per configuration
2020-06-02 23:21:05,993 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591111265992 with initial instances count: 4
2020-06-02 23:21:06,237 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:205 - Fetching config from server at : http://192.168.1.3:4001/
2020-06-02 23:21:06,491 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:149 - Located environment: name=sqq-order, profiles=[dev], label=null, version=null, state=null
2020-06-02 23:21:06,491 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:98 - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='classpath:/resposity/sqq-order-dev.yml'}]}
2020-06-02 23:21:06,493 [main] INFO  [com.sqq.order.SqqOrderApplication] SpringApplication.java:658 - The following profiles are active: dev
2020-06-02 23:21:06,506 [main] INFO  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@314c8b4a: startup date [Tue Jun 02 23:21:06 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@37d4349f
2020-06-02 23:21:07,295 [main] INFO  [o.s.b.factory.support.DefaultListableBeanFactory] DefaultListableBeanFactory.java:821 - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-06-02 23:21:07,422 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:294 - BeanFactory id=60453ea5-0a69-3a6f-84a1-bf1c7fcd27ae
2020-06-02 23:21:07,434 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 23:21:07,521 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4f72dcfc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 23:21:07,584 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6b8cdff9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 23:21:07,884 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:91 - Tomcat initialized with port(s): 8085 (http)
2020-06-02 23:21:07,894 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Initializing ProtocolHandler ["http-nio-8085"]
2020-06-02 23:21:07,901 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:180 - Starting service [Tomcat]
2020-06-02 23:21:07,901 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:180 - Starting Servlet Engine: Apache Tomcat/8.5.34
2020-06-02 23:21:07,904 [localhost-startStop-1] INFO  [org.apache.catalina.core.AprLifecycleListener] DirectJDKLog.java:180 - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\IDM Computer Solutions\UltraEdit;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\WIN10\AppData\Local\Microsoft\WindowsApps;D:\Program Files (x86)\Microsoft VS Code Insiders\bin;D:\apache-maven-3.6.1\bin;C:\Users\WIN10\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;d:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\bin;.]
2020-06-02 23:21:08,043 [localhost-startStop-1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:180 - Initializing Spring embedded WebApplicationContext
2020-06-02 23:21:08,043 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 1537 ms
2020-06-02 23:21:08,236 [localhost-startStop-1] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-02 23:21:08,236 [localhost-startStop-1] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 23:21:08,242 [localhost-startStop-1] INFO  [com.netflix.config.DynamicPropertyFactory] DynamicPropertyFactory.java:281 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2e608786
2020-06-02 23:21:09,581 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-06-02 23:21:09,582 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-06-02 23:21:09,582 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-06-02 23:21:09,582 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-06-02 23:21:09,582 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'requestContextFilter' to: [/*]
2020-06-02 23:21:09,582 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpTraceFilter' to: [/*]
2020-06-02 23:21:09,582 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.ServletRegistrationBean] ServletRegistrationBean.java:187 - Servlet dispatcherServlet mapped to [/]
2020-06-02 23:21:09,779 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing FeignContext-sqq-user: startup date [Tue Jun 02 23:21:09 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@314c8b4a
2020-06-02 23:21:09,792 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 23:21:09,976 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:80 - HikariPool-1 - Starting...
2020-06-02 23:21:10,061 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:82 - HikariPool-1 - Start completed.
2020-06-02 23:21:10,061 [main] INFO  [com.codingapi.txlcn.tc.corelog.H2DbHelper] H2DbHelper.java:52 - Init H2 DATABASE at D:\spring-cloud-demo-worker\sqq-spring-cloud\.txlcn\sqq-order-8085
2020-06-02 23:21:10,326 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-02 23:21:10,326 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 23:21:10,418 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 23:21:10,580 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerAdapter] RequestMappingHandlerAdapter.java:588 - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@314c8b4a: startup date [Tue Jun 02 23:21:06 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@37d4349f
2020-06-02 23:21:10,624 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/newOrder],methods=[POST]}" onto public void com.sqq.order.controller.OrderController.newOrder(com.sqq.order.vo.NewOrder)
2020-06-02 23:21:10,625 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/getOrderById/{orderId}],methods=[GET]}" onto public void com.sqq.order.controller.OrderController.getOrderById(java.lang.Integer)
2020-06-02 23:21:10,627 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-06-02 23:21:10,627 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-02 23:21:10,662 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 23:21:10,662 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 23:21:11,502 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:888 - Shutting down DiscoveryClient ...
2020-06-02 23:21:11,508 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:911 - Completed shut down of DiscoveryClient
2020-06-02 23:21:11,534 [main] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:59 - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-06-02 23:21:11,547 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-02 23:21:11,548 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-02 23:21:11,549 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-02 23:21:11,601 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:433 - Registering beans for JMX exposure on startup
2020-06-02 23:21:11,602 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'logDbProperties' has been autodetected for JMX exposure
2020-06-02 23:21:11,603 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-06-02 23:21:11,609 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-06-02 23:21:11,610 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-06-02 23:21:11,611 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-06-02 23:21:11,614 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-06-02 23:21:11,621 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-06-02 23:21:11,629 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'logDbProperties': registering with JMX server as MBean [com.codingapi.txlcn.logger.db:name=logDbProperties,type=LogDbProperties]
2020-06-02 23:21:11,631 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=314c8b4a,type=ConfigurationPropertiesRebinder]
2020-06-02 23:21:11,637 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-06-02 23:21:11,651 [main] INFO  [o.s.context.support.DefaultLifecycleProcessor] DefaultLifecycleProcessor.java:356 - Starting beans in phase 0
2020-06-02 23:21:11,658 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 23:21:11,663 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-02 23:21:11,666 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-02 23:21:11,666 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-02 23:21:11,666 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-02 23:21:11,666 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-02 23:21:11,722 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 23:21:11,723 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-02 23:21:11,724 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-02 23:21:11,724 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-02 23:21:11,724 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-02 23:21:11,724 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-02 23:21:11,724 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-02 23:21:11,724 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-02 23:21:11,729 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-02 23:21:11,730 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1264 - Starting heartbeat executor: renew interval is: 5
2020-06-02 23:21:11,732 [main] INFO  [com.netflix.discovery.InstanceInfoReplicator] InstanceInfoReplicator.java:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-06-02 23:21:11,733 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591111271733 with initial instances count: 4
2020-06-02 23:21:11,743 [main] INFO  [o.s.c.n.e.serviceregistry.EurekaServiceRegistry] EurekaServiceRegistry.java:42 - Registering application SQQ-ORDER with eureka with status UP
2020-06-02 23:21:11,744 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1299 - Saw local status change event StatusChangeEvent [timestamp=1591111271744, current=UP, previous=STARTING]
2020-06-02 23:21:11,748 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:826 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085: registering service...
2020-06-02 23:21:11,769 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Starting ProtocolHandler ["http-nio-8085"]
2020-06-02 23:21:11,784 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] DirectJDKLog.java:180 - Using a shared selector for servlet write/read
2020-06-02 23:21:11,785 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:835 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085 - registration status: 204
2020-06-02 23:21:11,797 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:206 - Tomcat started on port(s): 8085 (http) with context path ''
2020-06-02 23:21:11,798 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration] EurekaAutoServiceRegistration.java:124 - Updating port to 8085
2020-06-02 23:21:11,800 [main] INFO  [com.sqq.order.SqqOrderApplication] StartupInfoLogger.java:59 - Started SqqOrderApplication in 7.809 seconds (JVM running for 8.615)
2020-06-02 23:21:11,842 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 1
2020-06-02 23:21:14,110 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:21:20,110 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 2
2020-06-02 23:21:22,117 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:21:28,117 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 3
2020-06-02 23:21:30,123 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:21:36,123 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 4
2020-06-02 23:21:38,126 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:21:44,127 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 5
2020-06-02 23:21:46,130 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:21:52,131 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 6
2020-06-02 23:21:54,135 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:22:00,135 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 7
2020-06-02 23:22:02,140 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:22:08,141 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 8
2020-06-02 23:22:08,144 [Thread-139] INFO  [com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack] TCSideRpcInitCallBack.java:77 - Send init message to TM[/127.0.0.1:8070]
2020-06-02 23:22:08,156 [main] INFO  [com.codingapi.txlcn.tc.corelog.txc.TxcLogHelper] TxcLogHelper.java:59 - Txc log table finish (H2 DATABASE)
2020-06-02 23:22:08,156 [main] INFO  [c.c.txlcn.tc.corelog.aspect.AspectLogHelper] AspectLogHelper.java:62 - Aspect log table finished (H2 DATABASE)
2020-06-02 23:22:08,339 [RMI TCP Connection(14)-127.0.0.1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:180 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-06-02 23:22:08,339 [RMI TCP Connection(14)-127.0.0.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:494 - FrameworkServlet 'dispatcherServlet': initialization started
2020-06-02 23:22:08,341 [RMI TCP Connection(16)-127.0.0.1] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:110 - HikariPool-2 - Starting...
2020-06-02 23:22:08,357 [RMI TCP Connection(14)-127.0.0.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:509 - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2020-06-02 23:22:08,404 [Thread-139] INFO  [com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack] TCSideRpcInitCallBack.java:92 - Finally, determined dtx time is 30000ms, tm rpc timeout is 1000 ms, machineId is 15
2020-06-02 23:22:08,405 [Thread-139] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:72 - Searching for more TM...
2020-06-02 23:22:08,432 [Thread-139] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:106 - TC[sqq-order:8085] established TM cluster successfully!
2020-06-02 23:22:08,432 [Thread-139] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:111 - TM cluster's size: 1
2020-06-02 23:22:08,563 [RMI TCP Connection(16)-127.0.0.1] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:123 - HikariPool-2 - Start completed.
2020-06-02 23:22:08,585 [RMI TCP Connection(16)-127.0.0.1] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:205 - Fetching config from server at : http://192.168.1.3:4001/
2020-06-02 23:22:08,754 [RMI TCP Connection(16)-127.0.0.1] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:149 - Located environment: name=sqq-order, profiles=[dev], label=null, version=null, state=null
2020-06-02 23:26:11,727 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 23:31:11,728 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 23:36:11,729 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 23:40:56,548 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6392827e: startup date [Tue Jun 02 23:40:56 CST 2020]; root of context hierarchy
2020-06-02 23:40:56,735 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 23:40:56,758 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2304b0e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 23:40:57,026 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 23:40:57,069 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-02 23:40:57,353 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-02 23:40:57,353 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-02 23:40:57,428 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-02 23:40:57,428 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-02 23:40:57,609 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 23:40:57,731 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-02 23:40:57,731 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-02 23:40:57,732 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-02 23:40:57,732 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-02 23:40:57,732 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-02 23:40:57,732 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-02 23:40:57,732 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-02 23:40:57,853 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-02 23:40:57,855 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1311 - Not registering with Eureka server per configuration
2020-06-02 23:40:57,858 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591112457857 with initial instances count: 1
2020-06-02 23:40:58,120 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:205 - Fetching config from server at : http://192.168.1.3:4001/
2020-06-02 23:40:58,358 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:149 - Located environment: name=sqq-order, profiles=[dev], label=null, version=null, state=null
2020-06-02 23:40:58,359 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:98 - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='classpath:/resposity/sqq-order-dev.yml'}]}
2020-06-02 23:40:58,361 [main] INFO  [com.sqq.order.SqqOrderApplication] SpringApplication.java:658 - The following profiles are active: dev
2020-06-02 23:40:58,375 [main] INFO  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@69da0b12: startup date [Tue Jun 02 23:40:58 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6392827e
2020-06-02 23:40:59,220 [main] INFO  [o.s.b.factory.support.DefaultListableBeanFactory] DefaultListableBeanFactory.java:821 - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-06-02 23:40:59,332 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:294 - BeanFactory id=60453ea5-0a69-3a6f-84a1-bf1c7fcd27ae
2020-06-02 23:40:59,348 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 23:40:59,442 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6eaadea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 23:40:59,510 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2304b0e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 23:40:59,845 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:91 - Tomcat initialized with port(s): 8085 (http)
2020-06-02 23:40:59,855 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Initializing ProtocolHandler ["http-nio-8085"]
2020-06-02 23:40:59,863 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:180 - Starting service [Tomcat]
2020-06-02 23:40:59,864 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:180 - Starting Servlet Engine: Apache Tomcat/8.5.34
2020-06-02 23:40:59,867 [localhost-startStop-1] INFO  [org.apache.catalina.core.AprLifecycleListener] DirectJDKLog.java:180 - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\IDM Computer Solutions\UltraEdit;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\WIN10\AppData\Local\Microsoft\WindowsApps;D:\Program Files (x86)\Microsoft VS Code Insiders\bin;D:\apache-maven-3.6.1\bin;C:\Users\WIN10\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;d:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\bin;.]
2020-06-02 23:41:00,012 [localhost-startStop-1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:180 - Initializing Spring embedded WebApplicationContext
2020-06-02 23:41:00,013 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 1638 ms
2020-06-02 23:41:00,217 [localhost-startStop-1] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-02 23:41:00,218 [localhost-startStop-1] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 23:41:00,225 [localhost-startStop-1] INFO  [com.netflix.config.DynamicPropertyFactory] DynamicPropertyFactory.java:281 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@10285104
2020-06-02 23:41:01,609 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-06-02 23:41:01,609 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-06-02 23:41:01,610 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-06-02 23:41:01,610 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-06-02 23:41:01,610 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'requestContextFilter' to: [/*]
2020-06-02 23:41:01,610 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpTraceFilter' to: [/*]
2020-06-02 23:41:01,610 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.ServletRegistrationBean] ServletRegistrationBean.java:187 - Servlet dispatcherServlet mapped to [/]
2020-06-02 23:41:01,811 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing FeignContext-sqq-user: startup date [Tue Jun 02 23:41:01 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@69da0b12
2020-06-02 23:41:01,827 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 23:41:02,019 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:80 - HikariPool-1 - Starting...
2020-06-02 23:41:02,110 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:82 - HikariPool-1 - Start completed.
2020-06-02 23:41:02,110 [main] INFO  [com.codingapi.txlcn.tc.corelog.H2DbHelper] H2DbHelper.java:52 - Init H2 DATABASE at D:\spring-cloud-demo-worker\sqq-spring-cloud\.txlcn\sqq-order-8085
2020-06-02 23:41:02,395 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-02 23:41:02,395 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 23:41:02,477 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 23:41:02,661 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerAdapter] RequestMappingHandlerAdapter.java:588 - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@69da0b12: startup date [Tue Jun 02 23:40:58 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6392827e
2020-06-02 23:41:02,709 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/getOrderById/{orderId}],methods=[GET]}" onto public void com.sqq.order.controller.OrderController.getOrderById(java.lang.Integer)
2020-06-02 23:41:02,710 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/newOrder],methods=[POST]}" onto public void com.sqq.order.controller.OrderController.newOrder(com.sqq.order.vo.NewOrder)
2020-06-02 23:41:02,712 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-06-02 23:41:02,713 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-02 23:41:02,750 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 23:41:02,750 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 23:41:03,445 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:888 - Shutting down DiscoveryClient ...
2020-06-02 23:41:03,450 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:911 - Completed shut down of DiscoveryClient
2020-06-02 23:41:03,464 [main] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:59 - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-06-02 23:41:03,475 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-02 23:41:03,477 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-02 23:41:03,478 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-02 23:41:03,525 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:433 - Registering beans for JMX exposure on startup
2020-06-02 23:41:03,526 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'logDbProperties' has been autodetected for JMX exposure
2020-06-02 23:41:03,526 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-06-02 23:41:03,532 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-06-02 23:41:03,533 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-06-02 23:41:03,534 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-06-02 23:41:03,537 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-06-02 23:41:03,545 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-06-02 23:41:03,552 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'logDbProperties': registering with JMX server as MBean [com.codingapi.txlcn.logger.db:name=logDbProperties,type=LogDbProperties]
2020-06-02 23:41:03,554 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=69da0b12,type=ConfigurationPropertiesRebinder]
2020-06-02 23:41:03,560 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-06-02 23:41:03,575 [main] INFO  [o.s.context.support.DefaultLifecycleProcessor] DefaultLifecycleProcessor.java:356 - Starting beans in phase 0
2020-06-02 23:41:03,583 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 23:41:03,587 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-02 23:41:03,590 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-02 23:41:03,591 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-02 23:41:03,591 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-02 23:41:03,591 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-02 23:41:03,637 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 23:41:03,638 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-02 23:41:03,638 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-02 23:41:03,638 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-02 23:41:03,639 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-02 23:41:03,639 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-02 23:41:03,639 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-02 23:41:03,639 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-02 23:41:03,644 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-02 23:41:03,644 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1264 - Starting heartbeat executor: renew interval is: 5
2020-06-02 23:41:03,646 [main] INFO  [com.netflix.discovery.InstanceInfoReplicator] InstanceInfoReplicator.java:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-06-02 23:41:03,647 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591112463647 with initial instances count: 3
2020-06-02 23:41:03,653 [main] INFO  [o.s.c.n.e.serviceregistry.EurekaServiceRegistry] EurekaServiceRegistry.java:42 - Registering application SQQ-ORDER with eureka with status UP
2020-06-02 23:41:03,654 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1299 - Saw local status change event StatusChangeEvent [timestamp=1591112463653, current=UP, previous=STARTING]
2020-06-02 23:41:03,656 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:826 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085: registering service...
2020-06-02 23:41:03,667 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Starting ProtocolHandler ["http-nio-8085"]
2020-06-02 23:41:03,679 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] DirectJDKLog.java:180 - Using a shared selector for servlet write/read
2020-06-02 23:41:03,682 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:835 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085 - registration status: 204
2020-06-02 23:41:03,692 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:206 - Tomcat started on port(s): 8085 (http) with context path ''
2020-06-02 23:41:03,693 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration] EurekaAutoServiceRegistration.java:124 - Updating port to 8085
2020-06-02 23:41:03,695 [main] INFO  [com.sqq.order.SqqOrderApplication] StartupInfoLogger.java:59 - Started SqqOrderApplication in 7.805 seconds (JVM running for 8.95)
2020-06-02 23:41:03,734 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 1
2020-06-02 23:41:06,029 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:41:12,029 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 2
2020-06-02 23:41:14,033 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:41:20,034 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 3
2020-06-02 23:41:22,038 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:41:28,039 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 4
2020-06-02 23:41:30,046 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:41:36,046 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 5
2020-06-02 23:41:38,051 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:41:44,051 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 6
2020-06-02 23:41:46,055 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:41:52,056 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 7
2020-06-02 23:41:54,060 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:42:00,061 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 8
2020-06-02 23:42:02,072 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:111 - Connect socket(/127.0.0.1:8070) fail. 6000ms latter try again.
2020-06-02 23:42:08,072 [main] WARN  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:124 - Finally, netty connection fail , socket is /127.0.0.1:8070
2020-06-02 23:42:08,076 [main] ERROR [com.codingapi.txlcn.tc.txmsg.AutoTMClusterEngine] AutoTMClusterEngine.java:67 - request fail. non tx-manager is alive. on reportInvalidTM.
2020-06-02 23:42:08,077 [main] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:72 - Searching for more TM...
2020-06-02 23:42:08,079 [main] INFO  [o.s.b.a.l.ConditionEvaluationReportLoggingListener] ConditionEvaluationReportLoggingListener.java:142 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-06-02 23:42:08,084 [main] ERROR [org.springframework.boot.SpringApplication] SpringApplication.java:837 - Application run failed
java.lang.IllegalStateException: Failed to execute ApplicationRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:786)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:773)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1242)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1230)
	at com.sqq.order.SqqOrderApplication.main(SqqOrderApplication.java:22)
Caused by: java.lang.IllegalStateException: There is no normal TM.
	at com.codingapi.txlcn.tc.txmsg.TMSearcher.search(TMSearcher.java:86)
	at com.codingapi.txlcn.tc.txmsg.AutoTMClusterEngine.prepareToResearchTMCluster(AutoTMClusterEngine.java:83)
	at com.codingapi.txlcn.tc.txmsg.AutoTMClusterEngine.onConnectFail(AutoTMClusterEngine.java:69)
	at com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack.lambda$connectFail$3(TCSideRpcInitCallBack.java:107)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack.connectFail(TCSideRpcInitCallBack.java:107)
	at com.codingapi.txlcn.txmsg.netty.impl.NettyRpcClientInitializer.connect(NettyRpcClientInitializer.java:125)
	at com.codingapi.txlcn.txmsg.netty.impl.NettyRpcClientInitializer.init(NettyRpcClientInitializer.java:85)
	at com.codingapi.txlcn.tc.txmsg.TCRpcServer.init(TCRpcServer.java:58)
	at com.codingapi.txlcn.common.runner.TxLcnApplicationRunner.run(TxLcnApplicationRunner.java:54)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:783)
	... 5 common frames omitted
2020-06-02 23:42:08,085 [main] INFO  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:991 - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@69da0b12: startup date [Tue Jun 02 23:40:58 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6392827e
2020-06-02 23:42:08,085 [main] INFO  [o.s.c.n.e.serviceregistry.EurekaServiceRegistry] EurekaServiceRegistry.java:65 - Unregistering application SQQ-ORDER with eureka with status DOWN
2020-06-02 23:42:08,086 [main] WARN  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1297 - Saw local status change event StatusChangeEvent [timestamp=1591112528086, current=DOWN, previous=UP]
2020-06-02 23:42:08,086 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:826 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085: registering service...
2020-06-02 23:42:08,087 [main] INFO  [o.s.context.support.DefaultLifecycleProcessor] DefaultLifecycleProcessor.java:369 - Stopping beans in phase 0
2020-06-02 23:42:08,088 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:451 - Unregistering JMX-exposed beans on shutdown
2020-06-02 23:42:08,088 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanRegistrationSupport.java:185 - Unregistering JMX-exposed beans
2020-06-02 23:42:08,089 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcServerInitializer] NettyRpcServerInitializer.java:102 - server was down.
2020-06-02 23:42:08,091 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:132 - RPC client was down.
2020-06-02 23:42:08,092 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:835 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085 - registration status: 204
2020-06-02 23:42:08,093 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:381 - HikariPool-1 - Shutdown initiated...
2020-06-02 23:42:08,099 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:383 - HikariPool-1 - Shutdown completed.
2020-06-02 23:42:08,099 [main] INFO  [com.codingapi.txlcn.tc.corelog.H2DbHelper] H2DbHelper.java:90 - log hikariDataSource close.
2020-06-02 23:42:08,099 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:991 - Closing FeignContext-sqq-user: startup date [Tue Jun 02 23:41:01 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@69da0b12
2020-06-02 23:42:08,101 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:888 - Shutting down DiscoveryClient ...
2020-06-02 23:42:08,103 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 23:42:11,105 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:922 - Unregistering ...
2020-06-02 23:42:11,111 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:924 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085 - deregister  status: 200
2020-06-02 23:42:11,115 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:911 - Completed shut down of DiscoveryClient
2020-06-02 23:43:53,626 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@342c38f8: startup date [Tue Jun 02 23:43:53 CST 2020]; root of context hierarchy
2020-06-02 23:43:53,852 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 23:43:53,883 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e4160715] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 23:43:54,419 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 23:43:54,469 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-02 23:43:54,879 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-02 23:43:54,880 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-02 23:43:55,053 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-02 23:43:55,053 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-02 23:43:55,346 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 23:43:55,521 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-02 23:43:55,522 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-02 23:43:55,523 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-02 23:43:55,523 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-02 23:43:55,523 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-02 23:43:55,523 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-02 23:43:55,524 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-02 23:43:55,685 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-02 23:43:55,692 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1311 - Not registering with Eureka server per configuration
2020-06-02 23:43:55,696 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591112635695 with initial instances count: 2
2020-06-02 23:43:56,033 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:205 - Fetching config from server at : http://192.168.1.3:4001/
2020-06-02 23:43:56,352 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:149 - Located environment: name=sqq-order, profiles=[dev], label=null, version=null, state=null
2020-06-02 23:43:56,352 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:98 - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='classpath:/resposity/sqq-order-dev.yml'}]}
2020-06-02 23:43:56,357 [main] INFO  [com.sqq.order.SqqOrderApplication] SpringApplication.java:658 - The following profiles are active: dev
2020-06-02 23:43:56,376 [main] INFO  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@79b08632: startup date [Tue Jun 02 23:43:56 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@342c38f8
2020-06-02 23:43:57,249 [main] INFO  [o.s.b.factory.support.DefaultListableBeanFactory] DefaultListableBeanFactory.java:821 - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-06-02 23:43:57,360 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:294 - BeanFactory id=60453ea5-0a69-3a6f-84a1-bf1c7fcd27ae
2020-06-02 23:43:57,374 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 23:43:57,495 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c7fc0418] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 23:43:57,566 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e4160715] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 23:43:57,893 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:91 - Tomcat initialized with port(s): 8085 (http)
2020-06-02 23:43:57,902 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Initializing ProtocolHandler ["http-nio-8085"]
2020-06-02 23:43:57,910 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:180 - Starting service [Tomcat]
2020-06-02 23:43:57,911 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:180 - Starting Servlet Engine: Apache Tomcat/8.5.34
2020-06-02 23:43:57,914 [localhost-startStop-1] INFO  [org.apache.catalina.core.AprLifecycleListener] DirectJDKLog.java:180 - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\IDM Computer Solutions\UltraEdit;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\WIN10\AppData\Local\Microsoft\WindowsApps;D:\Program Files (x86)\Microsoft VS Code Insiders\bin;D:\apache-maven-3.6.1\bin;C:\Users\WIN10\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;d:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\bin;.]
2020-06-02 23:43:58,057 [localhost-startStop-1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:180 - Initializing Spring embedded WebApplicationContext
2020-06-02 23:43:58,058 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 1682 ms
2020-06-02 23:43:58,264 [localhost-startStop-1] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-02 23:43:58,264 [localhost-startStop-1] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 23:43:58,270 [localhost-startStop-1] INFO  [com.netflix.config.DynamicPropertyFactory] DynamicPropertyFactory.java:281 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@385d9bf1
2020-06-02 23:43:59,643 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-06-02 23:43:59,643 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-06-02 23:43:59,644 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-06-02 23:43:59,644 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-06-02 23:43:59,644 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'requestContextFilter' to: [/*]
2020-06-02 23:43:59,644 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpTraceFilter' to: [/*]
2020-06-02 23:43:59,644 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.ServletRegistrationBean] ServletRegistrationBean.java:187 - Servlet dispatcherServlet mapped to [/]
2020-06-02 23:43:59,842 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing FeignContext-sqq-user: startup date [Tue Jun 02 23:43:59 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@79b08632
2020-06-02 23:43:59,859 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 23:44:00,055 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:80 - HikariPool-1 - Starting...
2020-06-02 23:44:00,144 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:82 - HikariPool-1 - Start completed.
2020-06-02 23:44:00,144 [main] INFO  [com.codingapi.txlcn.tc.corelog.H2DbHelper] H2DbHelper.java:52 - Init H2 DATABASE at D:\spring-cloud-demo-worker\sqq-spring-cloud\.txlcn\sqq-order-8085
2020-06-02 23:44:00,438 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-02 23:44:00,438 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 23:44:00,513 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 23:44:00,681 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerAdapter] RequestMappingHandlerAdapter.java:588 - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@79b08632: startup date [Tue Jun 02 23:43:56 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@342c38f8
2020-06-02 23:44:00,730 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/newOrder],methods=[POST]}" onto public void com.sqq.order.controller.OrderController.newOrder(com.sqq.order.vo.NewOrder)
2020-06-02 23:44:00,730 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/getOrderById/{orderId}],methods=[GET]}" onto public void com.sqq.order.controller.OrderController.getOrderById(java.lang.Integer)
2020-06-02 23:44:00,733 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-06-02 23:44:00,733 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-02 23:44:00,771 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 23:44:00,771 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 23:44:01,487 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:888 - Shutting down DiscoveryClient ...
2020-06-02 23:44:01,493 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:911 - Completed shut down of DiscoveryClient
2020-06-02 23:44:01,508 [main] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:59 - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-06-02 23:44:01,518 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-02 23:44:01,518 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-02 23:44:01,519 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-02 23:44:01,569 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:433 - Registering beans for JMX exposure on startup
2020-06-02 23:44:01,570 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'logDbProperties' has been autodetected for JMX exposure
2020-06-02 23:44:01,571 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-06-02 23:44:01,578 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-06-02 23:44:01,579 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-06-02 23:44:01,580 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-06-02 23:44:01,582 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-06-02 23:44:01,589 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-06-02 23:44:01,596 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'logDbProperties': registering with JMX server as MBean [com.codingapi.txlcn.logger.db:name=logDbProperties,type=LogDbProperties]
2020-06-02 23:44:01,598 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=79b08632,type=ConfigurationPropertiesRebinder]
2020-06-02 23:44:01,604 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-06-02 23:44:01,617 [main] INFO  [o.s.context.support.DefaultLifecycleProcessor] DefaultLifecycleProcessor.java:356 - Starting beans in phase 0
2020-06-02 23:44:01,624 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 23:44:01,628 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-02 23:44:01,630 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-02 23:44:01,630 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-02 23:44:01,631 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-02 23:44:01,631 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-02 23:44:01,678 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 23:44:01,679 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-02 23:44:01,679 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-02 23:44:01,679 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-02 23:44:01,680 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-02 23:44:01,680 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-02 23:44:01,680 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-02 23:44:01,680 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-02 23:44:01,684 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-02 23:44:01,685 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1264 - Starting heartbeat executor: renew interval is: 5
2020-06-02 23:44:01,686 [main] INFO  [com.netflix.discovery.InstanceInfoReplicator] InstanceInfoReplicator.java:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-06-02 23:44:01,687 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591112641687 with initial instances count: 4
2020-06-02 23:44:01,694 [main] INFO  [o.s.c.n.e.serviceregistry.EurekaServiceRegistry] EurekaServiceRegistry.java:42 - Registering application SQQ-ORDER with eureka with status UP
2020-06-02 23:44:01,695 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1299 - Saw local status change event StatusChangeEvent [timestamp=1591112641695, current=UP, previous=STARTING]
2020-06-02 23:44:01,696 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:826 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085: registering service...
2020-06-02 23:44:01,709 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Starting ProtocolHandler ["http-nio-8085"]
2020-06-02 23:44:01,720 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] DirectJDKLog.java:180 - Using a shared selector for servlet write/read
2020-06-02 23:44:01,720 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:835 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085 - registration status: 204
2020-06-02 23:44:01,733 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:206 - Tomcat started on port(s): 8085 (http) with context path ''
2020-06-02 23:44:01,733 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration] EurekaAutoServiceRegistration.java:124 - Updating port to 8085
2020-06-02 23:44:01,735 [main] INFO  [com.sqq.order.SqqOrderApplication] StartupInfoLogger.java:59 - Started SqqOrderApplication in 8.911 seconds (JVM running for 9.935)
2020-06-02 23:44:01,774 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 1
2020-06-02 23:44:02,055 [Thread-31] INFO  [com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack] TCSideRpcInitCallBack.java:77 - Send init message to TM[/127.0.0.1:8070]
2020-06-02 23:44:02,066 [main] INFO  [com.codingapi.txlcn.tc.corelog.txc.TxcLogHelper] TxcLogHelper.java:59 - Txc log table finish (H2 DATABASE)
2020-06-02 23:44:02,066 [main] INFO  [c.c.txlcn.tc.corelog.aspect.AspectLogHelper] AspectLogHelper.java:62 - Aspect log table finished (H2 DATABASE)
2020-06-02 23:44:02,208 [Thread-31] INFO  [com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack] TCSideRpcInitCallBack.java:92 - Finally, determined dtx time is 30000ms, tm rpc timeout is 1000 ms, machineId is 19
2020-06-02 23:44:02,208 [Thread-31] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:72 - Searching for more TM...
2020-06-02 23:44:02,231 [Thread-31] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:106 - TC[sqq-order:8085] established TM cluster successfully!
2020-06-02 23:44:02,232 [Thread-31] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:111 - TM cluster's size: 1
2020-06-02 23:44:02,446 [RMI TCP Connection(6)-127.0.0.1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:180 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-06-02 23:44:02,446 [RMI TCP Connection(6)-127.0.0.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:494 - FrameworkServlet 'dispatcherServlet': initialization started
2020-06-02 23:44:02,448 [RMI TCP Connection(8)-127.0.0.1] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:110 - HikariPool-2 - Starting...
2020-06-02 23:44:02,462 [RMI TCP Connection(6)-127.0.0.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:509 - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-06-02 23:44:02,655 [RMI TCP Connection(8)-127.0.0.1] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:123 - HikariPool-2 - Start completed.
2020-06-02 23:44:02,677 [RMI TCP Connection(8)-127.0.0.1] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:205 - Fetching config from server at : http://192.168.1.3:4001/
2020-06-02 23:44:02,863 [RMI TCP Connection(8)-127.0.0.1] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:149 - Located environment: name=sqq-order, profiles=[dev], label=null, version=null, state=null
2020-06-02 23:49:01,682 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 23:54:01,683 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 23:55:41,328 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7fee8714: startup date [Tue Jun 02 23:55:41 CST 2020]; root of context hierarchy
2020-06-02 23:55:41,547 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 23:55:41,573 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8ade896e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 23:55:41,850 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 23:55:41,891 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-02 23:55:42,163 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-02 23:55:42,163 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-02 23:55:42,234 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-02 23:55:42,234 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-02 23:55:42,407 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 23:55:42,523 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-02 23:55:42,523 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-02 23:55:42,523 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-02 23:55:42,524 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-02 23:55:42,524 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-02 23:55:42,524 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-02 23:55:42,524 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-02 23:55:42,631 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-02 23:55:42,634 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1311 - Not registering with Eureka server per configuration
2020-06-02 23:55:42,636 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591113342635 with initial instances count: 5
2020-06-02 23:55:42,950 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:205 - Fetching config from server at : http://192.168.1.3:4001/
2020-06-02 23:55:43,285 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:149 - Located environment: name=sqq-order, profiles=[dev], label=null, version=null, state=null
2020-06-02 23:55:43,285 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:98 - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='classpath:/resposity/sqq-order-dev.yml'}]}
2020-06-02 23:55:43,288 [main] INFO  [com.sqq.order.SqqOrderApplication] SpringApplication.java:658 - The following profiles are active: dev
2020-06-02 23:55:43,304 [main] INFO  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2b56f5f8: startup date [Tue Jun 02 23:55:43 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7fee8714
2020-06-02 23:55:44,325 [main] INFO  [o.s.b.factory.support.DefaultListableBeanFactory] DefaultListableBeanFactory.java:821 - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-06-02 23:55:44,450 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:294 - BeanFactory id=60453ea5-0a69-3a6f-84a1-bf1c7fcd27ae
2020-06-02 23:55:44,465 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 23:55:44,577 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6ec48671] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 23:55:44,654 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8ade896e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-02 23:55:45,169 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:91 - Tomcat initialized with port(s): 8085 (http)
2020-06-02 23:55:45,182 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Initializing ProtocolHandler ["http-nio-8085"]
2020-06-02 23:55:45,195 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:180 - Starting service [Tomcat]
2020-06-02 23:55:45,196 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:180 - Starting Servlet Engine: Apache Tomcat/8.5.34
2020-06-02 23:55:45,217 [localhost-startStop-1] INFO  [org.apache.catalina.core.AprLifecycleListener] DirectJDKLog.java:180 - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\IDM Computer Solutions\UltraEdit;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\WIN10\AppData\Local\Microsoft\WindowsApps;D:\Program Files (x86)\Microsoft VS Code Insiders\bin;D:\apache-maven-3.6.1\bin;C:\Users\WIN10\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;d:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\bin;.]
2020-06-02 23:55:45,536 [localhost-startStop-1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:180 - Initializing Spring embedded WebApplicationContext
2020-06-02 23:55:45,536 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 2233 ms
2020-06-02 23:55:45,967 [localhost-startStop-1] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-02 23:55:45,967 [localhost-startStop-1] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 23:55:45,977 [localhost-startStop-1] INFO  [com.netflix.config.DynamicPropertyFactory] DynamicPropertyFactory.java:281 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7502c22d
2020-06-02 23:55:47,893 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-06-02 23:55:47,894 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-06-02 23:55:47,894 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-06-02 23:55:47,894 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-06-02 23:55:47,894 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'requestContextFilter' to: [/*]
2020-06-02 23:55:47,894 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpTraceFilter' to: [/*]
2020-06-02 23:55:47,894 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.ServletRegistrationBean] ServletRegistrationBean.java:187 - Servlet dispatcherServlet mapped to [/]
2020-06-02 23:55:48,088 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing FeignContext-sqq-user: startup date [Tue Jun 02 23:55:48 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2b56f5f8
2020-06-02 23:55:48,100 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-02 23:55:48,326 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:80 - HikariPool-1 - Starting...
2020-06-02 23:55:48,425 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:82 - HikariPool-1 - Start completed.
2020-06-02 23:55:48,425 [main] INFO  [com.codingapi.txlcn.tc.corelog.H2DbHelper] H2DbHelper.java:52 - Init H2 DATABASE at D:\spring-cloud-demo-worker\sqq-spring-cloud\.txlcn\sqq-order-8085
2020-06-02 23:55:48,690 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-02 23:55:48,690 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-02 23:55:48,771 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 23:55:48,955 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerAdapter] RequestMappingHandlerAdapter.java:588 - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2b56f5f8: startup date [Tue Jun 02 23:55:43 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7fee8714
2020-06-02 23:55:49,009 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/newOrder],methods=[POST]}" onto public void com.sqq.order.controller.OrderController.newOrder(com.sqq.order.vo.NewOrder)
2020-06-02 23:55:49,010 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/getOrderById/{orderId}],methods=[GET]}" onto public void com.sqq.order.controller.OrderController.getOrderById(java.lang.Integer)
2020-06-02 23:55:49,013 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-06-02 23:55:49,013 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-02 23:55:49,059 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 23:55:49,060 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-02 23:55:50,128 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:888 - Shutting down DiscoveryClient ...
2020-06-02 23:55:50,135 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:911 - Completed shut down of DiscoveryClient
2020-06-02 23:55:50,160 [main] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:59 - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-06-02 23:55:50,174 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-02 23:55:50,175 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-02 23:55:50,176 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-02 23:55:50,237 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:433 - Registering beans for JMX exposure on startup
2020-06-02 23:55:50,238 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'logDbProperties' has been autodetected for JMX exposure
2020-06-02 23:55:50,239 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-06-02 23:55:50,246 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-06-02 23:55:50,247 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-06-02 23:55:50,248 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-06-02 23:55:50,251 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-06-02 23:55:50,260 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-06-02 23:55:50,270 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'logDbProperties': registering with JMX server as MBean [com.codingapi.txlcn.logger.db:name=logDbProperties,type=LogDbProperties]
2020-06-02 23:55:50,272 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=2b56f5f8,type=ConfigurationPropertiesRebinder]
2020-06-02 23:55:50,280 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-06-02 23:55:50,299 [main] INFO  [o.s.context.support.DefaultLifecycleProcessor] DefaultLifecycleProcessor.java:356 - Starting beans in phase 0
2020-06-02 23:55:50,314 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-02 23:55:50,319 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-02 23:55:50,322 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-02 23:55:50,323 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-02 23:55:50,323 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-02 23:55:50,323 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-02 23:55:50,389 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-02 23:55:50,390 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-02 23:55:50,392 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-02 23:55:50,393 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-02 23:55:50,394 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-02 23:55:50,394 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-02 23:55:50,394 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-02 23:55:50,394 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-02 23:55:50,400 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-02 23:55:50,401 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1264 - Starting heartbeat executor: renew interval is: 5
2020-06-02 23:55:50,403 [main] INFO  [com.netflix.discovery.InstanceInfoReplicator] InstanceInfoReplicator.java:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-06-02 23:55:50,405 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591113350405 with initial instances count: 5
2020-06-02 23:55:50,412 [main] INFO  [o.s.c.n.e.serviceregistry.EurekaServiceRegistry] EurekaServiceRegistry.java:42 - Registering application SQQ-ORDER with eureka with status UP
2020-06-02 23:55:50,413 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1299 - Saw local status change event StatusChangeEvent [timestamp=1591113350413, current=UP, previous=STARTING]
2020-06-02 23:55:50,416 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:826 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085: registering service...
2020-06-02 23:55:50,429 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Starting ProtocolHandler ["http-nio-8085"]
2020-06-02 23:55:50,444 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] DirectJDKLog.java:180 - Using a shared selector for servlet write/read
2020-06-02 23:55:50,447 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:835 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085 - registration status: 204
2020-06-02 23:55:50,460 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:206 - Tomcat started on port(s): 8085 (http) with context path ''
2020-06-02 23:55:50,461 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration] EurekaAutoServiceRegistration.java:124 - Updating port to 8085
2020-06-02 23:55:50,463 [main] INFO  [com.sqq.order.SqqOrderApplication] StartupInfoLogger.java:59 - Started SqqOrderApplication in 9.965 seconds (JVM running for 10.835)
2020-06-02 23:55:50,547 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 1
2020-06-02 23:55:51,239 [Thread-33] INFO  [com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack] TCSideRpcInitCallBack.java:77 - Send init message to TM[/127.0.0.1:8070]
2020-06-02 23:55:51,251 [main] INFO  [com.codingapi.txlcn.tc.corelog.txc.TxcLogHelper] TxcLogHelper.java:59 - Txc log table finish (H2 DATABASE)
2020-06-02 23:55:51,252 [main] INFO  [c.c.txlcn.tc.corelog.aspect.AspectLogHelper] AspectLogHelper.java:62 - Aspect log table finished (H2 DATABASE)
2020-06-02 23:55:51,467 [Thread-33] INFO  [com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack] TCSideRpcInitCallBack.java:92 - Finally, determined dtx time is 30000ms, tm rpc timeout is 1000 ms, machineId is 20
2020-06-02 23:55:51,468 [Thread-33] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:72 - Searching for more TM...
2020-06-02 23:55:51,508 [Thread-33] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:106 - TC[sqq-order:8085] established TM cluster successfully!
2020-06-02 23:55:51,508 [Thread-33] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:111 - TM cluster's size: 1
2020-06-02 23:55:51,700 [RMI TCP Connection(9)-127.0.0.1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:180 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-06-02 23:55:51,701 [RMI TCP Connection(9)-127.0.0.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:494 - FrameworkServlet 'dispatcherServlet': initialization started
2020-06-02 23:55:51,727 [RMI TCP Connection(8)-127.0.0.1] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:110 - HikariPool-2 - Starting...
2020-06-02 23:55:51,729 [RMI TCP Connection(9)-127.0.0.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:509 - FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2020-06-02 23:55:52,056 [RMI TCP Connection(8)-127.0.0.1] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:123 - HikariPool-2 - Start completed.
2020-06-02 23:55:52,081 [RMI TCP Connection(8)-127.0.0.1] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:205 - Fetching config from server at : http://192.168.1.3:4001/
2020-06-02 23:55:52,594 [RMI TCP Connection(8)-127.0.0.1] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:149 - Located environment: name=sqq-order, profiles=[dev], label=null, version=null, state=null
2020-06-03 00:20:03,027 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@fba92d3: startup date [Wed Jun 03 00:20:03 CST 2020]; root of context hierarchy
2020-06-03 00:20:03,244 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-03 00:20:03,273 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d97bbe5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-03 00:20:03,581 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-03 00:20:03,635 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-03 00:20:03,926 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-03 00:20:03,927 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-03 00:20:04,004 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-03 00:20:04,005 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-03 00:20:04,204 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-03 00:20:04,325 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-03 00:20:04,325 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-03 00:20:04,326 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-03 00:20:04,326 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-03 00:20:04,326 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-03 00:20:04,326 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-03 00:20:04,326 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-03 00:20:04,441 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-03 00:20:04,443 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1311 - Not registering with Eureka server per configuration
2020-06-03 00:20:04,446 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591114804445 with initial instances count: 3
2020-06-03 00:20:04,714 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:205 - Fetching config from server at : http://192.168.1.3:4001/
2020-06-03 00:20:04,970 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:149 - Located environment: name=sqq-order, profiles=[dev], label=null, version=null, state=null
2020-06-03 00:20:04,970 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:98 - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='classpath:/resposity/sqq-order-dev.yml'}]}
2020-06-03 00:20:04,973 [main] INFO  [com.sqq.order.SqqOrderApplication] SpringApplication.java:658 - The following profiles are active: dev
2020-06-03 00:20:04,988 [main] INFO  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6a9b0a6f: startup date [Wed Jun 03 00:20:04 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@fba92d3
2020-06-03 00:20:05,848 [main] INFO  [o.s.b.factory.support.DefaultListableBeanFactory] DefaultListableBeanFactory.java:821 - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-06-03 00:20:05,958 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:294 - BeanFactory id=60453ea5-0a69-3a6f-84a1-bf1c7fcd27ae
2020-06-03 00:20:05,972 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-03 00:20:06,065 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd61bb5d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-03 00:20:06,132 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d97bbe5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-03 00:20:06,465 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:91 - Tomcat initialized with port(s): 8085 (http)
2020-06-03 00:20:06,475 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Initializing ProtocolHandler ["http-nio-8085"]
2020-06-03 00:20:06,483 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:180 - Starting service [Tomcat]
2020-06-03 00:20:06,484 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:180 - Starting Servlet Engine: Apache Tomcat/8.5.34
2020-06-03 00:20:06,487 [localhost-startStop-1] INFO  [org.apache.catalina.core.AprLifecycleListener] DirectJDKLog.java:180 - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\IDM Computer Solutions\UltraEdit;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\WIN10\AppData\Local\Microsoft\WindowsApps;D:\Program Files (x86)\Microsoft VS Code Insiders\bin;D:\apache-maven-3.6.1\bin;C:\Users\WIN10\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;d:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\bin;.]
2020-06-03 00:20:06,635 [localhost-startStop-1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:180 - Initializing Spring embedded WebApplicationContext
2020-06-03 00:20:06,635 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 1648 ms
2020-06-03 00:20:06,841 [localhost-startStop-1] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-03 00:20:06,841 [localhost-startStop-1] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-03 00:20:06,848 [localhost-startStop-1] INFO  [com.netflix.config.DynamicPropertyFactory] DynamicPropertyFactory.java:281 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@27e2c4ef
2020-06-03 00:20:08,251 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-06-03 00:20:08,251 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-06-03 00:20:08,252 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-06-03 00:20:08,252 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-06-03 00:20:08,252 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'requestContextFilter' to: [/*]
2020-06-03 00:20:08,252 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpTraceFilter' to: [/*]
2020-06-03 00:20:08,252 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.ServletRegistrationBean] ServletRegistrationBean.java:187 - Servlet dispatcherServlet mapped to [/]
2020-06-03 00:20:08,478 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing FeignContext-sqq-user: startup date [Wed Jun 03 00:20:08 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6a9b0a6f
2020-06-03 00:20:08,493 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-03 00:20:08,712 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:80 - HikariPool-1 - Starting...
2020-06-03 00:20:08,841 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:82 - HikariPool-1 - Start completed.
2020-06-03 00:20:08,841 [main] INFO  [com.codingapi.txlcn.tc.corelog.H2DbHelper] H2DbHelper.java:52 - Init H2 DATABASE at D:\spring-cloud-demo-worker\sqq-spring-cloud\.txlcn\sqq-order-8085
2020-06-03 00:20:09,142 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-03 00:20:09,142 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-03 00:20:09,225 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-03 00:20:09,391 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerAdapter] RequestMappingHandlerAdapter.java:588 - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6a9b0a6f: startup date [Wed Jun 03 00:20:04 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@fba92d3
2020-06-03 00:20:09,440 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/getOrderById/{orderId}],methods=[GET]}" onto public void com.sqq.order.controller.OrderController.getOrderById(java.lang.Integer)
2020-06-03 00:20:09,442 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/newOrder],methods=[POST]}" onto public void com.sqq.order.controller.OrderController.newOrder(com.sqq.order.vo.NewOrder)
2020-06-03 00:20:09,444 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-06-03 00:20:09,445 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-03 00:20:09,481 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-03 00:20:09,481 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-03 00:20:10,299 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:888 - Shutting down DiscoveryClient ...
2020-06-03 00:20:10,304 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:911 - Completed shut down of DiscoveryClient
2020-06-03 00:20:10,319 [main] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:59 - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-06-03 00:20:10,330 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-03 00:20:10,331 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-03 00:20:10,331 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-03 00:20:10,381 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:433 - Registering beans for JMX exposure on startup
2020-06-03 00:20:10,382 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'logDbProperties' has been autodetected for JMX exposure
2020-06-03 00:20:10,383 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-06-03 00:20:10,390 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-06-03 00:20:10,391 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-06-03 00:20:10,392 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-06-03 00:20:10,395 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-06-03 00:20:10,402 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-06-03 00:20:10,411 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'logDbProperties': registering with JMX server as MBean [com.codingapi.txlcn.logger.db:name=logDbProperties,type=LogDbProperties]
2020-06-03 00:20:10,413 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6a9b0a6f,type=ConfigurationPropertiesRebinder]
2020-06-03 00:20:10,419 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-06-03 00:20:10,432 [main] INFO  [o.s.context.support.DefaultLifecycleProcessor] DefaultLifecycleProcessor.java:356 - Starting beans in phase 0
2020-06-03 00:20:10,440 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-03 00:20:10,445 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-03 00:20:10,447 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-03 00:20:10,447 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-03 00:20:10,447 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-03 00:20:10,448 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-03 00:20:10,493 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-03 00:20:10,494 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-03 00:20:10,494 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-03 00:20:10,494 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-03 00:20:10,495 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-03 00:20:10,495 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-03 00:20:10,495 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-03 00:20:10,495 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-03 00:20:10,498 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-03 00:20:10,499 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1264 - Starting heartbeat executor: renew interval is: 5
2020-06-03 00:20:10,501 [main] INFO  [com.netflix.discovery.InstanceInfoReplicator] InstanceInfoReplicator.java:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-06-03 00:20:10,502 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1591114810502 with initial instances count: 3
2020-06-03 00:20:10,508 [main] INFO  [o.s.c.n.e.serviceregistry.EurekaServiceRegistry] EurekaServiceRegistry.java:42 - Registering application SQQ-ORDER with eureka with status UP
2020-06-03 00:20:10,510 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1299 - Saw local status change event StatusChangeEvent [timestamp=1591114810510, current=UP, previous=STARTING]
2020-06-03 00:20:10,511 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:826 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085: registering service...
2020-06-03 00:20:10,523 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Starting ProtocolHandler ["http-nio-8085"]
2020-06-03 00:20:10,535 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] DirectJDKLog.java:180 - Using a shared selector for servlet write/read
2020-06-03 00:20:10,539 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:835 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085 - registration status: 204
2020-06-03 00:20:10,550 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:206 - Tomcat started on port(s): 8085 (http) with context path ''
2020-06-03 00:20:10,551 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration] EurekaAutoServiceRegistration.java:124 - Updating port to 8085
2020-06-03 00:20:10,552 [main] INFO  [com.sqq.order.SqqOrderApplication] StartupInfoLogger.java:59 - Started SqqOrderApplication in 8.413 seconds (JVM running for 9.43)
2020-06-03 00:20:10,592 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 1
2020-06-03 00:20:10,881 [Thread-30] INFO  [com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack] TCSideRpcInitCallBack.java:77 - Send init message to TM[/127.0.0.1:8070]
2020-06-03 00:20:10,891 [main] INFO  [com.codingapi.txlcn.tc.corelog.txc.TxcLogHelper] TxcLogHelper.java:59 - Txc log table finish (H2 DATABASE)
2020-06-03 00:20:10,892 [main] INFO  [c.c.txlcn.tc.corelog.aspect.AspectLogHelper] AspectLogHelper.java:62 - Aspect log table finished (H2 DATABASE)
2020-06-03 00:20:11,044 [Thread-30] INFO  [com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack] TCSideRpcInitCallBack.java:92 - Finally, determined dtx time is 30000ms, tm rpc timeout is 1000 ms, machineId is 29
2020-06-03 00:20:11,044 [Thread-30] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:72 - Searching for more TM...
2020-06-03 00:20:11,071 [Thread-30] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:106 - TC[sqq-order:8085] established TM cluster successfully!
2020-06-03 00:20:11,071 [Thread-30] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:111 - TM cluster's size: 1
2020-06-03 00:20:11,288 [RMI TCP Connection(2)-127.0.0.1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:180 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-06-03 00:20:11,289 [RMI TCP Connection(2)-127.0.0.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:494 - FrameworkServlet 'dispatcherServlet': initialization started
2020-06-03 00:20:11,291 [RMI TCP Connection(4)-127.0.0.1] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:110 - HikariPool-2 - Starting...
2020-06-03 00:20:11,305 [RMI TCP Connection(2)-127.0.0.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:509 - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-06-03 00:20:11,495 [RMI TCP Connection(4)-127.0.0.1] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:123 - HikariPool-2 - Start completed.
2020-06-03 00:20:11,515 [RMI TCP Connection(4)-127.0.0.1] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:205 - Fetching config from server at : http://192.168.1.3:4001/
2020-06-03 00:20:11,726 [RMI TCP Connection(4)-127.0.0.1] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:149 - Located environment: name=sqq-order, profiles=[dev], label=null, version=null, state=null
2020-06-03 00:25:10,498 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-03 00:30:10,500 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-03 00:35:10,502 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-03 00:40:10,503 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-03 00:45:10,505 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-03 00:50:10,507 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-18 00:35:34,099 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1a18644: startup date [Thu Jun 18 00:35:34 CST 2020]; root of context hierarchy
2020-06-18 00:35:34,278 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-18 00:35:34,299 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$bc13d05d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-18 00:35:34,545 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-18 00:35:34,585 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-18 00:35:34,848 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-18 00:35:34,848 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-18 00:35:34,917 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-18 00:35:34,917 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-18 00:35:35,084 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-18 00:35:35,199 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-18 00:35:35,199 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-18 00:35:35,199 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-18 00:35:35,200 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-18 00:35:35,200 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-18 00:35:35,200 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-18 00:35:35,200 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-18 00:35:35,312 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-18 00:35:35,315 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1311 - Not registering with Eureka server per configuration
2020-06-18 00:35:35,318 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1592411735317 with initial instances count: 4
2020-06-18 00:35:35,561 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:205 - Fetching config from server at : http://192.168.1.3:4001/
2020-06-18 00:35:35,793 [main] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:149 - Located environment: name=sqq-order, profiles=[dev], label=null, version=null, state=null
2020-06-18 00:35:35,794 [main] INFO  [o.s.c.b.c.PropertySourceBootstrapConfiguration] PropertySourceBootstrapConfiguration.java:98 - Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='classpath:/resposity/sqq-order-dev.yml'}]}
2020-06-18 00:35:35,796 [main] INFO  [com.sqq.order.SqqOrderApplication] SpringApplication.java:658 - The following profiles are active: dev
2020-06-18 00:35:35,808 [main] INFO  [o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext] AbstractApplicationContext.java:588 - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7918c7f8: startup date [Thu Jun 18 00:35:35 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1a18644
2020-06-18 00:35:36,553 [main] INFO  [o.s.b.factory.support.DefaultListableBeanFactory] DefaultListableBeanFactory.java:821 - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]]
2020-06-18 00:35:36,657 [main] INFO  [o.springframework.cloud.context.scope.GenericScope] GenericScope.java:294 - BeanFactory id=60453ea5-0a69-3a6f-84a1-bf1c7fcd27ae
2020-06-18 00:35:36,669 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-18 00:35:36,755 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9ff9cd60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-18 00:35:36,820 [main] INFO  [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] PostProcessorRegistrationDelegate.java:326 - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$bc13d05d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-18 00:35:37,125 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:91 - Tomcat initialized with port(s): 8085 (http)
2020-06-18 00:35:37,134 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Initializing ProtocolHandler ["http-nio-8085"]
2020-06-18 00:35:37,142 [main] INFO  [org.apache.catalina.core.StandardService] DirectJDKLog.java:180 - Starting service [Tomcat]
2020-06-18 00:35:37,142 [main] INFO  [org.apache.catalina.core.StandardEngine] DirectJDKLog.java:180 - Starting Servlet Engine: Apache Tomcat/8.5.34
2020-06-18 00:35:37,145 [localhost-startStop-1] INFO  [org.apache.catalina.core.AprLifecycleListener] DirectJDKLog.java:180 - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_191\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\IDM Computer Solutions\UltraEdit;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Users\WIN10\AppData\Local\Microsoft\WindowsApps;D:\Program Files (x86)\Microsoft VS Code Insiders\bin;D:\apache-maven-3.6.1\bin;C:\Users\WIN10\AppData\Roaming\npm;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Program Files\Java\jdk1.8.0_191\jre\bin;;d:\Program Files\JetBrains\IntelliJ IDEA 2020.1.1\bin;;.]
2020-06-18 00:35:37,275 [localhost-startStop-1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:180 - Initializing Spring embedded WebApplicationContext
2020-06-18 00:35:37,275 [localhost-startStop-1] INFO  [org.springframework.web.context.ContextLoader] ServletWebServerApplicationContext.java:285 - Root WebApplicationContext: initialization completed in 1467 ms
2020-06-18 00:35:37,457 [localhost-startStop-1] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-18 00:35:37,458 [localhost-startStop-1] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-18 00:35:37,464 [localhost-startStop-1] INFO  [com.netflix.config.DynamicPropertyFactory] DynamicPropertyFactory.java:281 - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@31d293
2020-06-18 00:35:38,685 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-06-18 00:35:38,686 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2020-06-18 00:35:38,686 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-06-18 00:35:38,686 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-06-18 00:35:38,686 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'requestContextFilter' to: [/*]
2020-06-18 00:35:38,686 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.FilterRegistrationBean] AbstractFilterRegistrationBean.java:245 - Mapping filter: 'httpTraceFilter' to: [/*]
2020-06-18 00:35:38,686 [localhost-startStop-1] INFO  [o.s.boot.web.servlet.ServletRegistrationBean] ServletRegistrationBean.java:187 - Servlet dispatcherServlet mapped to [/]
2020-06-18 00:35:38,869 [main] INFO  [o.s.c.a.AnnotationConfigApplicationContext] AbstractApplicationContext.java:588 - Refreshing FeignContext-sqq-user: startup date [Thu Jun 18 00:35:38 CST 2020]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7918c7f8
2020-06-18 00:35:38,881 [main] INFO  [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] AutowiredAnnotationBeanPostProcessor.java:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2020-06-18 00:35:39,053 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:80 - HikariPool-1 - Starting...
2020-06-18 00:35:39,145 [main] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:82 - HikariPool-1 - Start completed.
2020-06-18 00:35:39,146 [main] INFO  [com.codingapi.txlcn.tc.corelog.H2DbHelper] H2DbHelper.java:52 - Init H2 DATABASE at D:\spring-cloud-demo-worker\sqq-spring-cloud\.txlcn\sqq-order-8085
2020-06-18 00:35:39,394 [main] WARN  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:121 - No URLs will be polled as dynamic configuration sources.
2020-06-18 00:35:39,394 [main] INFO  [com.netflix.config.sources.URLConfigurationSource] URLConfigurationSource.java:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-06-18 00:35:39,480 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-18 00:35:39,629 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerAdapter] RequestMappingHandlerAdapter.java:588 - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7918c7f8: startup date [Thu Jun 18 00:35:35 CST 2020]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1a18644
2020-06-18 00:35:39,672 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/newOrder],methods=[POST]}" onto public void com.sqq.order.controller.OrderController.newOrder(com.sqq.order.vo.NewOrder)
2020-06-18 00:35:39,673 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/order/getOrderById/{orderId}],methods=[GET]}" onto public void com.sqq.order.controller.OrderController.getOrderById(java.lang.Integer)
2020-06-18 00:35:39,675 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-06-18 00:35:39,675 [main] INFO  [o.s.w.s.m.m.a.RequestMappingHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-18 00:35:39,709 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-18 00:35:39,710 [main] INFO  [o.s.web.servlet.handler.SimpleUrlHandlerMapping] AbstractUrlHandlerMapping.java:373 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-06-18 00:35:40,343 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:888 - Shutting down DiscoveryClient ...
2020-06-18 00:35:40,347 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:911 - Completed shut down of DiscoveryClient
2020-06-18 00:35:40,360 [main] INFO  [o.s.b.actuate.endpoint.web.EndpointLinksResolver] EndpointLinksResolver.java:59 - Exposing 2 endpoint(s) beneath base path '/actuator'
2020-06-18 00:35:40,369 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-18 00:35:40,369 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2020-06-18 00:35:40,370 [main] INFO  [o.s.b.a.e.web.servlet.WebMvcEndpointHandlerMapping] AbstractHandlerMethodMapping.java:549 - Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-06-18 00:35:40,413 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:433 - Registering beans for JMX exposure on startup
2020-06-18 00:35:40,414 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'logDbProperties' has been autodetected for JMX exposure
2020-06-18 00:35:40,415 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-06-18 00:35:40,421 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'environmentManager' has been autodetected for JMX exposure
2020-06-18 00:35:40,421 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'refreshScope' has been autodetected for JMX exposure
2020-06-18 00:35:40,422 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:895 - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2020-06-18 00:35:40,425 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2020-06-18 00:35:40,431 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2020-06-18 00:35:40,438 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'logDbProperties': registering with JMX server as MBean [com.codingapi.txlcn.logger.db:name=logDbProperties,type=LogDbProperties]
2020-06-18 00:35:40,439 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:675 - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7918c7f8,type=ConfigurationPropertiesRebinder]
2020-06-18 00:35:40,444 [main] INFO  [o.s.jmx.export.annotation.AnnotationMBeanExporter] MBeanExporter.java:668 - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-06-18 00:35:40,455 [main] INFO  [o.s.context.support.DefaultLifecycleProcessor] DefaultLifecycleProcessor.java:356 - Starting beans in phase 0
2020-06-18 00:35:40,462 [main] INFO  [o.s.cloud.netflix.eureka.InstanceInfoFactory] InstanceInfoFactory.java:71 - Setting initial instance status as: STARTING
2020-06-18 00:35:40,465 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:349 - Initializing Eureka in region us-east-1
2020-06-18 00:35:40,467 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:70 - Using JSON encoding codec LegacyJacksonJson
2020-06-18 00:35:40,467 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:71 - Using JSON decoding codec LegacyJacksonJson
2020-06-18 00:35:40,468 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:80 - Using XML encoding codec XStreamXml
2020-06-18 00:35:40,468 [main] INFO  [c.n.discovery.provider.DiscoveryJerseyProvider] DiscoveryJerseyProvider.java:81 - Using XML decoding codec XStreamXml
2020-06-18 00:35:40,511 [main] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-18 00:35:40,512 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:958 - Disable delta property : false
2020-06-18 00:35:40,512 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:959 - Single vip registry refresh property : null
2020-06-18 00:35:40,513 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:960 - Force full registry fetch : false
2020-06-18 00:35:40,513 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:961 - Application is null : false
2020-06-18 00:35:40,513 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:962 - Registered Applications size is zero : true
2020-06-18 00:35:40,513 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:964 - Application version is -1: true
2020-06-18 00:35:40,513 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1047 - Getting all instance registry info from the eureka server
2020-06-18 00:35:40,516 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1056 - The response status is 200
2020-06-18 00:35:40,517 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1264 - Starting heartbeat executor: renew interval is: 5
2020-06-18 00:35:40,518 [main] INFO  [com.netflix.discovery.InstanceInfoReplicator] InstanceInfoReplicator.java:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-06-18 00:35:40,519 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:449 - Discovery Client initialized at timestamp 1592411740519 with initial instances count: 4
2020-06-18 00:35:40,525 [main] INFO  [o.s.c.n.e.serviceregistry.EurekaServiceRegistry] EurekaServiceRegistry.java:42 - Registering application SQQ-ORDER with eureka with status UP
2020-06-18 00:35:40,525 [main] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:1299 - Saw local status change event StatusChangeEvent [timestamp=1592411740525, current=UP, previous=STARTING]
2020-06-18 00:35:40,527 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:826 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085: registering service...
2020-06-18 00:35:40,538 [main] INFO  [org.apache.coyote.http11.Http11NioProtocol] DirectJDKLog.java:180 - Starting ProtocolHandler ["http-nio-8085"]
2020-06-18 00:35:40,548 [main] INFO  [org.apache.tomcat.util.net.NioSelectorPool] DirectJDKLog.java:180 - Using a shared selector for servlet write/read
2020-06-18 00:35:40,550 [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient] DiscoveryClient.java:835 - DiscoveryClient_SQQ-ORDER/DESKTOP-PSDTEL6:sqq-order:8085 - registration status: 204
2020-06-18 00:35:40,558 [main] INFO  [o.s.boot.web.embedded.tomcat.TomcatWebServer] TomcatWebServer.java:206 - Tomcat started on port(s): 8085 (http) with context path ''
2020-06-18 00:35:40,559 [main] INFO  [o.s.c.n.e.s.EurekaAutoServiceRegistration] EurekaAutoServiceRegistration.java:124 - Updating port to 8085
2020-06-18 00:35:40,561 [main] INFO  [com.sqq.order.SqqOrderApplication] StartupInfoLogger.java:59 - Started SqqOrderApplication in 7.082 seconds (JVM running for 8.099)
2020-06-18 00:35:40,597 [main] INFO  [c.c.t.txmsg.netty.impl.NettyRpcClientInitializer] NettyRpcClientInitializer.java:102 - Try connect socket(/127.0.0.1:8070) - count 1
2020-06-18 00:35:40,865 [Thread-27] INFO  [com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack] TCSideRpcInitCallBack.java:77 - Send init message to TM[/127.0.0.1:8070]
2020-06-18 00:35:40,875 [main] INFO  [com.codingapi.txlcn.tc.corelog.txc.TxcLogHelper] TxcLogHelper.java:59 - Txc log table finish (H2 DATABASE)
2020-06-18 00:35:40,876 [main] INFO  [c.c.txlcn.tc.corelog.aspect.AspectLogHelper] AspectLogHelper.java:62 - Aspect log table finished (H2 DATABASE)
2020-06-18 00:35:41,022 [Thread-27] INFO  [com.codingapi.txlcn.tc.txmsg.TCSideRpcInitCallBack] TCSideRpcInitCallBack.java:92 - Finally, determined dtx time is 30000ms, tm rpc timeout is 1000 ms, machineId is 35
2020-06-18 00:35:41,022 [Thread-27] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:72 - Searching for more TM...
2020-06-18 00:35:41,044 [Thread-27] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:106 - TC[sqq-order:8085] established TM cluster successfully!
2020-06-18 00:35:41,044 [Thread-27] INFO  [com.codingapi.txlcn.tc.txmsg.TMSearcher] TMSearcher.java:111 - TM cluster's size: 1
2020-06-18 00:35:41,259 [RMI TCP Connection(4)-127.0.0.1] INFO  [o.a.c.core.ContainerBase.[Tomcat].[localhost].[/]] DirectJDKLog.java:180 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-06-18 00:35:41,259 [RMI TCP Connection(4)-127.0.0.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:494 - FrameworkServlet 'dispatcherServlet': initialization started
2020-06-18 00:35:41,259 [RMI TCP Connection(6)-127.0.0.1] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:110 - HikariPool-2 - Starting...
2020-06-18 00:35:41,284 [RMI TCP Connection(4)-127.0.0.1] INFO  [org.springframework.web.servlet.DispatcherServlet] FrameworkServlet.java:509 - FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
2020-06-18 00:35:41,429 [RMI TCP Connection(6)-127.0.0.1] INFO  [com.zaxxer.hikari.HikariDataSource] HikariDataSource.java:123 - HikariPool-2 - Start completed.
2020-06-18 00:35:41,439 [RMI TCP Connection(6)-127.0.0.1] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:205 - Fetching config from server at : http://192.168.1.3:4001/
2020-06-18 00:35:41,610 [RMI TCP Connection(6)-127.0.0.1] INFO  [o.s.c.c.client.ConfigServicePropertySourceLocator] ConfigServicePropertySourceLocator.java:149 - Located environment: name=sqq-order, profiles=[dev], label=null, version=null, state=null
2020-06-18 00:40:40,514 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-18 00:45:40,516 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-18 00:50:40,517 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-18 00:55:40,519 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-18 01:00:40,520 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-18 01:05:40,521 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-18 01:10:40,522 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-18 01:15:40,523 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-18 01:20:40,525 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-18 01:25:40,526 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-18 01:30:40,533 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-18 01:35:40,534 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-18 01:40:40,535 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
2020-06-18 01:45:40,537 [AsyncResolver-bootstrap-executor-0] INFO  [c.n.d.shared.resolver.aws.ConfigClusterResolver] ConfigClusterResolver.java:43 - Resolving eureka endpoints via configuration
